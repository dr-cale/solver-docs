openapi: 3.0.0
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  examples:
    IdModelPredictRequest:
      value:
        id: some_id
        data:
          user_id: user_id
      summary: Model that requires only id for prediction - Pre calculated
    ObjectModelPredictRequest:
      value:
        id: some_id
        data:
          x1: 33.2
          x2: 23.2
          x3: 443.2
          x4: 2
          x5: 1.1
          x6: 0.1
      summary: Model that accepts object for prediction
    MatrixModelPredictRequest:
      value:
        id: some_id
        data:
          - - 23
            - 12.3
            - 8.9
          - - 10
            - 32.9
            - 12
          - - 21.8
            - 12.8
            - 76.1
      summary: Model that accepts matrix for prediction
    ArrayModelPredictRequest:
      value:
        id: some_id
        data:
          - 23
          - 12.3
          - 8.9
          - 10
          - 32.9
      summary: Model that accepts array for prediction
    BinaryClassificationModelPredictResponse:
      value:
        details:
          model_type: BINARY_CLASSIFICATION
          number_of_classes: 2
        prediction:
          id: some_id
          predicted_Label: SomeClassName1
          predicted_score_value: 0.6
          predicted_score_type: probability
          prediction_evaluation:
            - predicted_label: SomeClassName1
              predicted_score_value: 0.6
              predicted_score_type: probability
            - predicted_label: SomeClassName2
              predicted_score_value: 0.4
              predicted_score_type: probability
          features:
            importance:
              x1: 0.5
              x2: 0.1
              x3: 0.1
              x4: 0.1
              x5: 0.1
              x6: 0.1
      summary: Binary classification model response
    MulticlassClassificationModelPredictResponse:
      value:
        details:
          model_type: MULTICLASS_CLASSIFICATION
          number_of_classes: 5
        prediction:
          id: some_id
          predicted_label: SomeClassName1
          predicted_score_value: 0.6
          predicted_score_type: probability
          prediction_evaluation:
            - predicted_label: SomeClassName1
              predicted_score_value: 0.6
              predicted_score_type: probability
            - predicted_label: SomeClassName2
              predicted_score_value: 0.1
              predicted_score_type: probability
            - predicted_label: SomeClassName3
              predicted_score_value: 0.2
              predicted_score_type: probability
            - predicted_label: SomeClassName4
              predicted_score_value: 0.05
              predicted_score_type: probability
            - predicted_label: SomeClassName5
              predicted_score_value: 0.05
              predicted_score_type: probability
          features:
            importance:
              x1: 0.5
              x2: 0.1
              x3: 0.1
              x4: 0.1
              x5: 0.1
              x6: 0.1
      summary: Multiclass classification model response
    SegmentationModelPredictResponse:
      value:
        details:
          model_type: SEGMENTATION
          number_of_segments: 5
        prediction:
          id: some_id
          predicted_label: "1"
          prediction_evaluation:
            - predicted_label: "1"
              predicted_distance: "1"
              predicted_distance_type: "euclidian"
            - predicted_label: "2"
              predicted_distance: "1"
              predicted_distance_type: "euclidian"
            - predicted_label: "3"
              predicted_distance: 1
              predicted_distance_type: "euclidian"
            - predicted_label: '4'
              predicted_distance: 1
              predicted_distance_type: "euclidian"
            - predicted_label: '5'
              predicted_distance: "1"
              predicted_distance_type: "euclidian"
        summary: Segmentation model response
    ReggresionModelPredictResponse:
      value:
        details:
          model_type: REGRESSION
        prediction:
          id: some_id
          predicted_value: 356.25
          predicted_value_type: euros
          prediction_evaluation:
            - predicted_metric: RMSE
              predicted_metric_value: 3.1
            - predicted_metric: MAPE
              predicted_metric_value: 3.1
          features:
            importance:
              x1: 0.5
              x2: 0.1
              x3: 0.1
              x4: 0.1
              x5: 0.1
              x6: 0.1
      summary: Regression model response
    ReccomendationModelPredictResponse:
      value:
        details:
          model_type: RECOMMENDER
        prediction:
          id: some_id
          customer_id: customer_id
          recommenderType: type
          products:
            - sku: product_id
              predicted_score_value: 0.66
              predicted_score_type: probability
              is_pruchased: true
            - sku: product_id
              predicted_score_value: 0.66
              predicted_score_type: probability
              is_pruchased: true
            - sku: product_id
              predicted_score_value: 0.66
              predicted_score_type: probability
              is_pruchased: true
            - sku: product_id
              predicted_score_value: 0.66
              predicted_score_type: probability
              is_pruchased: true
            - sku: product_id
              predicted_score_value: 0.66
              predicted_score_type: probability
              is_pruchased: true
      summary: Recommender model response
    ExpertModelPredictResponse:
      value:
        details:
          model_type: CUSTOM
        prediction:
          id: some_id
          tbd: tbd
      summary: Expert model response
    AdditionalNumber:
      summary: Additional Number
      value:
        offset: 10
        limit: 20
        additional:
          uid: "88736231"
          additional_id: "special-points"
          type: "float"
          label: "Special Points"
          value: 443223.23
    AdditionalDescription:
      summary: Additional Description
      value:
        offset: 10
        limit: 20
        additional:
          uid: "88736231"
          additional_id: "new-description"
          type: "float"
          label: "New Description"
          value: "Premium Customer"
    AdditionalList:
      summary: Additional list
      value:
        offset: 10
        limit: 20
        additional:
          uid: "88736231"
          additional_id: "values-list"
          type: "float"
          label: "Values list"
          value: ["New Buyer", "Silver"]
    RFMT:
      summary: RFMT segment
      value:
        uid: "88736231"
        smid: rfmt
        scoring_datetime: "2021-09-11 15:00:00"
        segment: "2"
        transitions:
        - segment_datetime: "2020-01-01T00:00:00.000Z"
          segment: "3"
    RFMTPlus:
      summary: RFMT Plus segment
      value:
        uid: "88736231"
        smid: rfmt-plus
        scoring_datetime: "2021-09-11 15:00:00"
        segment: "4"
        transitions:
        - segment_datetime: "2020-01-01T00:00:00.000Z"
          segment: "5"
    RFMTCC:
      summary: RFMTCC segment
      value:
        uid: "88736231"
        smid: rfmtcc
        scoring_datetime: "2021-09-11 15:00:00"
        segment: "8"
        transitions:
        - segment_datetime: "2020-01-01T00:00:00.000Z"
          segment: "7"
    RFMTLV:
      summary: RFMTLV segment
      value:
        uid: "88736231"
        smid: rfmtlv
        scoring_datetime: "2021-09-11 15:00:00"
        segment: "0"
        transitions:
        - segment_datetime: "2020-01-01T00:00:00.000Z"
          segment: "1"
    BestSellingItem:
      summary: Best selling item example
      value:
        vbid: 2
        category: category_2
        trend: growing
        trend_value: 43.0
        trend_measure: percent
    LeastSellingItem:
      summary: Least selling item example
      value:
        vbid: 2
        category: category_2
        trend: growing
        trend_value: 43.0
        trend_measure: percent
    BestSellingCategory:
      summary: Best selling category example
      value:
        vbid: 2
        item: item_3
        trend: growing
        trend_value: 43.0
        trend_measure: percent
    LeastSellingCategory:
      summary: Least selling category example
      value:
        vbid: 2
        item: item_3
        trend: growing
        trend_value: 43.0
        trend_measure: percent
  schemas:
    EventError:
      type: object
      properties:
        message:
          type: string
          example: There was a problem collecting event
    TouchpointRequest:
      type: object
      properties:
        touchpoint_name:
          type: string
          example: "Touchpoint Front 334"
        channel:
          type: string
          example: "website"
        position:
          type: string
          example: "front_page_slider_2"
        is_active:
          type: boolean
          example: false
        is_draft:
          type: boolean
          example: true
        views:
          type: array
          items:
            type: string
            example: "view_76"
    TouchpointListResponse:
      type: object
      properties: 
        offset:
          type: integer
          example: 20
        limit:
          type: integer
          example: 10
        touchpoints:
          type: array
          items:
            $ref: '#/components/schemas/TouchpointResponse'
    TouchpointResponse:
      type: object
      properties:
        touchpoint_id:
          type: string
          example: "T98321"
        touchpoint_name:
          type: string
          example: "Touchpoint Front 334"
        author:
          type: string
          example: "John Doe"
        channel:
          type: string
          example: "website"
        position:
          type: string
          example: "front_page_slider_2"
        date_created:
          type: string
          format: date-time
          example: "2021-12-01T22:03:34"
        date_modified:
          type: string
          format: date-time
          example: "2021-12-05T13:28:44"
        is_active:
          type: boolean
          example: true
        is_draft:
          type: boolean
          example: False
        views:
          type: array
          items:
            type: object
            properties:
              priority:
                type: integer
                example: 1
              view_id:
                type: string
                example: "view_76"
    ViewsListResponse:
      type: object
      properties: 
        offset:
          type: integer
          example: 20
        limit:
          type: integer
          example: 10
        views:
          type: array
          items:
            $ref: '#/components/schemas/ViewResponse'
    ViewResponse:
      type: object
      properties:
        view_id: 
          type: string
          example: view_2831
        view_name: 
          type: string
          example: Recommended Products
        date_created: 
          type: string
          example: "2021-12-01T22:03:34"
        date_modified: 
          type: string
          example: "2021-12-05T13:28:44"
        author: 
          type: string
          example: John Doe
        audiences: 
          type: array
          items: 
            type: string
            example: audience 1
        number_of_positions: 
          type: integer
          example: 9
        rules: 
          type: array
          items: 
            type: object
            properties: 
              name: 
                type: string
                example: Brand filter
              type: 
                type: string
                example: GNN Recommender
              entity: 
                type: string
                example: Brand
              general_percentage: 
                type: string
                example: "30%"
              is_general_filter:
                type: boolean
                example: true 
              positions:
                type: array
                items:
                  type: string
                example: ["0", "1", "2"]
              values: 
                type: array
                items: 
                  type: object
                  properties: 
                    comparator: 
                      type: string
                      example: ">"
                    value: 
                      type: string
                      example: "120000"
                    column_name: 
                      type: string
                      example: price
    IamUserResponse:
      type: object
      properties:
        id:
          type: string
          example: f19222f5-ed47-4766-834c-1283fea6355e
        created_timestamp:
          type: number
          example: 1603665987200
        username:
          type: string
          example: demo
        enabled:
          type: boolean
        totp:
          type: boolean
        email_verified:
          type: boolean
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Doe
        email:
          type: string
          example: john.doe@outlook.com
        disableable_credential_types:
          type: array
          items:
            type: string
        required_actions:
          type: array
          items:
            type: string
            example: Verify Email
            enum:
            - Terms and Conditions
            - Update Password
            - Update Profile
            - Verify Email
        not_before:
          type: number
          example: 0
        access:
          $ref: '#/components/schemas/IamUserResponse_access'
    IamUserResponse_access:
      type: object
      properties:
        manage_group_membership:
          type: boolean
        view:
          type: boolean
        map_roles:
          type: boolean
        impersonate:
          type: boolean
        manage:
          type: boolean
    AuthCredentials:
      type: object
      properties:
        username:
          type: string
          example: john
        password:
          type: string
          example: doe.789
    UserAuthenticatedSuccessfully:
      type: object
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI1ck5nRGJaR1pVdWIwTGZNSGVOMmRFTGh1ZTFUdVlnVWgyVUZocWV4dTlZIn0.eyJleHAiOjE2MDQyNzM4MzcsImlhdCI6MTYwNDI0NTAzNywianRpIjoiMGNlZWY2ZTYtYzI4ZS00YjA1LWE3NzctNTllYzZhYjk5YmUyIiwiaXNzIjoiaHR0cHM6Ly9hdXRoLXRlc3QudGhpbmdzb2x2ZXIuY29tL2F1dGgvcmVhbG1zL3NvbHZlciIsImF1ZCI6InNvbHZlciIsInN1YiI6Ijg0OTBmZTUyLThiMzMtNDhmZi1hMjQ5LTQxMjVlYjI0YjJjNiIsInR5cCI6IkJlYXJlciIsImF6cCI6InNvbHZlciIsInNlc3Npb25fc3RhdGUiOiI0ZWRiYjVjYi0wNzcwLTRhOGQtOGQyZi0yYjc4MTgwODA1NTMiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbIioiXSwic2NvcGUiOiJwcm9maWxlIGVtYWlsIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsIm5hbWUiOiJKYW5lIERvZSIsInByZWZlcnJlZF91c2VybmFtZSI6ImpvaG4iLCJnaXZlbl9uYW1lIjoiSmFuZSIsImZhbWlseV9uYW1lIjoiRG9lIiwiZW1haWwiOiJkdXNhbm1pamF0b3ZpY0BvdXRsb29rLmNvbSJ9.E9it-QIYYVNhydath9wLxgvb3Z46pE9po9t-WZwrdaGq_v-nF31iD7c9lpXM28PYGPNZk-9T3TUwSbMD0Sy5DRZeFwdYw-dXPmgqll8-JF1Fb3CaMmo-WwNrmxWzIkV1e8h9cPP2r3AnjudYxQIuXog0GnTvxG936qZuLQNVu8m1So-IiVeR-uwnR1FLAcyOtVsnO9HeFGUCZwhkBG-yMCCk1Io5A5yChHAcgebRM8_UWqu2kaJhnXdGDvwvZLgxzrB-S3JSqxGBEA-h7YXzCiJpTzd3sXy6zn5xVhzNwSOmDUu0HfbICtTWiMvApAUJKWfEu6L-ioIB891PNineEg
        expires_in:
          type: string
          example: "28800"
        refresh_expires_in:
          type: string
          example: "1800"
        refresh_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJiMjI3OTg5Mi1iYjIzLTQ1NzItYjUxOS00NjRjODUwNmJhMzIifQ.eyJleHAiOjE2MDQyNDY4MzcsImlhdCI6MTYwNDI0NTAzNywianRpIjoiOGQ4YWEyZWItMTMwNC00ZmE4LTgxOTctNDUzNDc1NDBiOWU0IiwiaXNzIjoiaHR0cHM6Ly9hdXRoLXRlc3QudGhpbmdzb2x2ZXIuY29tL2F1dGgvcmVhbG1zL3NvbHZlciIsImF1ZCI6Imh0dHBzOi8vYXV0aC10ZXN0LnRoaW5nc29sdmVyLmNvbS9hdXRoL3JlYWxtcy9zb2x2ZXIiLCJzdWIiOiI4NDkwZmU1Mi04YjMzLTQ4ZmYtYTI0OS00MTI1ZWIyNGIyYzYiLCJ0eXAiOiJSZWZyZXNoIiwiYXpwIjoic29sdmVyIiwic2Vzc2lvbl9zdGF0ZSI6IjRlZGJiNWNiLTA3NzAtNGE4ZC04ZDJmLTJiNzgxODA4MDU1MyIsInNjb3BlIjoicHJvZmlsZSBlbWFpbCJ9.vEbgofK6PLFOi6FRWnVOchGFy1Bqh3nM_s3fIh3grbQ
        token_type:
          type: string
          example: bearer
        not_before_policy:
          type: string
          example: "0"
        session_state:
          type: string
          example: 4edbb5cb-0770-4a8d-8d2f-2b7818080553
        scope:
          type: string
          example: profile email
    InvalidUserCredentials:
      type: object
      properties:
        detail:
          type: string
          example: Invalid user credentials!
    ErrorConnectigToKeycloak:
      type: object
      properties:
        detail:
          type: string
          example: Error connecting to keycloak
    RefreshToken:
      type: object
      properties:
        refresh_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJiMjI3OTg5Mi1iYjIzLTQ1NzItYjUxOS00NjRjODUwNmJhMzIifQ.eyJleHAiOjE2MDQyNDY4MzcsImlhdCI6MTYwNDI0NTAzNywianRpIjoiOGQ4YWEyZWItMTMwNC00ZmE4LTgxOTctNDUzNDc1NDBiOWU0IiwiaXNzIjoiaHR0cHM6Ly9hdXRoLXRlc3QudGhpbmdzb2x2ZXIuY29tL2F1dGgvcmVhbG1zL3NvbHZlciIsImF1ZCI6Imh0dHBzOi8vYXV0aC10ZXN0LnRoaW5nc29sdmVyLmNvbS9hdXRoL3JlYWxtcy9zb2x2ZXIiLCJzdWIiOiI4NDkwZmU1Mi04YjMzLTQ4ZmYtYTI0OS00MTI1ZWIyNGIyYzYiLCJ0eXAiOiJSZWZyZXNoIiwiYXpwIjoic29sdmVyIiwic2Vzc2lvbl9zdGF0ZSI6IjRlZGJiNWNiLTA3NzAtNGE4ZC04ZDJmLTJiNzgxODA4MDU1MyIsInNjb3BlIjoicHJvZmlsZSBlbWFpbCJ9.vEbgofK6PLFOi6FRWnVOchGFy1Bqh3nM_s3fIh3grbQ
    AccessToken:
      type: object
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJiMjI3OTg5Mi1iYjIzLTQ1NzItYjUxOS00NjRjODUwNmJhMzIifQ.eyJleHAiOjE2MDQyNDY4MzcsImlhdCI6MTYwNDI0NTAzNywianRpIjoiOGQ4YWEyZWItMTMwNC00ZmE4LTgxOTctNDUzNDc1NDBiOWU0IiwiaXNzIjoiaHR0cHM6Ly9hdXRoLXRlc3QudGhpbmdzb2x2ZXIuY29tL2F1dGgvcmVhbG1zL3NvbHZlciIsImF1ZCI6Imh0dHBzOi8vYXV0aC10ZXN0LnRoaW5nc29sdmVyLmNvbS9hdXRoL3JlYWxtcy9zb2x2ZXIiLCJzdWIiOiI4NDkwZmU1Mi04YjMzLTQ4ZmYtYTI0OS00MTI1ZWIyNGIyYzYiLCJ0eXAiOiJSZWZyZXNoIiwiYXpwIjoic29sdmVyIiwic2Vzc2lvbl9zdGF0ZSI6IjRlZGJiNWNiLTA3NzAtNGE4ZC04ZDJmLTJiNzgxODA4MDU1MyIsInNjb3BlIjoicHJvZmlsZSBlbWFpbCJ9.vEbgofK6PLFOi6FRWnVOchGFy1Bqh3nM_s3fIh3grbQ
    InvalidRefreashToken:
      type: object
      properties:
        detail:
          type: string
          example: Invalid refresh token!
    UserLoggedOutSuccessfully:
      type: object
      properties:
        detail:
          type: string
          example: User logged out successfully
    CampaignResponse:
      type: object
      properties:
        campaign_name:
          type: string
          optional: false
          description: Campaign name inputed from campaigning user
          example: First Campaign Name
        date_created:
          type: string
          format: datetime
          example: "2021-11-11 11:50:00"
        date_modified:
          type: string
          format: datetime
          example: "2021-11-11 11:52:00"
        is_approved:
          type: boolean
          example: false
        is_approved_by_user:
          type: boolean
          example: false
        approved_by:
          type: array
          items:
            type: string
            example: john-doe
        approvals_left:
          type: integer
          example: 2
        required_approvals:
          type: integer
          example: 4
        audience:
          type: string
          format: string
          example: "audience-2"
        name:
          type: string
          example: new-campaign
        sender:
          type: string
          example: "thingsolverSms|ThingsSolverViberSender|somebody@thingsolver.com"
        author:
          type: string
          example: John Doe
        is_draft:
          type: boolean
          example: false
        is_sent:
          type: boolean
          example: true
          default: false
        abc: 
          type: boolean
          description: if campaign is ABC type campaign
          example: true
        is_recurring:
          type: boolean
          optional: true 
          description: Boolean to recognize if campaign will be send in reacurring manner
          example: true 
        recurring_frequency:
          type: string
          optional: True
          description: Definition of period campaign will be repeated. Format in ISO8601 standard; P1D - daily P1W - weekly, P1M - monthly P1Y - yearly.
          example: "P1W"
        campaign_details:
          type: array
          description: Details for one or multiple groups
          optional: false
          items:
            allOf:
                - $ref: '#/components/schemas/ACampaignResponse'
                - $ref: '#/components/schemas/BCampaignResponse'
    CampaignAllMetricsResponse:
      type: object
      properties:
        campaign_id:
          type: string
          example: customerName_01062021_personalized
        campaign_start_datetime:
          type: string
          format: datetime
          example: '2021-10-21'
        campaign_end_datetime:
          type: string
          format: datetime
          example: '2021-10-28'
        channel_name:
          type: string
          format: datetime
          example: viber
        target_audience_name: 
          type: string
          example: test audience group
        target_audience_count:
          type: integer
          example: 2400
        abc_audience_name:
          type: string
          example: A group
        abc_audience_count:
          type: integer
          example: 800
        metric:
          type: string
          example: click
        metrics_value:
          type: number
          format: float
          example: 35.4
        metrics_value_type:
          type: string
          example: percentage
        first_matrics_datetime:
          type: string
          format: datetime
          example: '2021-11-12T15:00:00.0000Z'
        last_matrics_datetime:
          type: string
          format: datetime
          example: '2021-10-15T15:00:00.0000Z'
    AllCampaignsMetricsResponse:
      type: array
      items:
        $ref: '#/components/schemas/CampaignMetricsResponse'
    CampaignMetricsResponse:
      type: object
      properties:
        campaign_id:
          type: string 
          example: "55463"
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/CampaignMetricsByMetricId'
    CampaignMetricsByMetricId:
      type: object
      properties: 
        id: 
          type: string
          example: BFL
        name:
          type: string
          example: Bought from Leaflet
        description:
          type: string
          example: Bought anything from leaflet in this campaign
        unit:
          type: string
          example: percent
        start_datetime:
          type: string
          format: datetime
          example: '2022-02-22T15:00:00.0000Z'
        end_datetime:
          type: string
          format: datetime
          example: '2022-02-28T15:00:00.0000Z'
        value:
          type: number
          example: 67.5
        aggregates:
          items:
            - $ref: '#/components/schemas/CampaignMetricsResultsRfmtLoyal'
            - $ref: '#/components/schemas/CampaignMetricsResultsRfmtDormant'
    CampaignMetricsResults:
      type: object
      properties:
        rfmt:
          type: array
          items:
            - $ref: '#/components/schemas/CampaignMetricsResultsRfmtLoyal'
            - $ref: '#/components/schemas/CampaignMetricsResultsRfmtDormant'
    CampaignMetricsResultsAllGroups:
      type: object
      properties:
        group_by: 
          type: string
          optional: false
          example: all
        group_value: 
          type: string
          optional: false
          example: all
        value: 
          type: number
          optional: false
          example: 65.7
    CampaignMetricsResultsRfmtLoyal:
      type: object
      properties:
        aggregate_by: 
          type: string 
          example: rfmt
        aggregate_group:
          type: string
          example: loyal
        value: 
          type: number
          optional: False
          example: 32.2
    CampaignMetricsResultsRfmtDormant:
      type: object
      properties:
        aggregate_by: 
          type: string 
          example: rfmt
        aggregate_group:
          type: string
          example: dormant
        value: 
          type: number
          optional: False
          example: 14.5
    CampaignMetricsGroupAggregates:
      type: object
      properties:
        rfmt:
          type: array
          items:
            - $ref: '#/components/schemas/CampaignMetricsResultsRfmtLoyal'
            - $ref: '#/components/schemas/CampaignMetricsResultsRfmtDormant'
    CampaignContentRequest:
      type: object
      properties:
        cid:
          type: string 
          example: "55463"
        campaign_name:
          type: string 
          description: Name of campaign inputed by user while creating campaign
          optional: false
          example: Birhtday Campaign
        channel_message_text:
          type: string
          optional: true
          description: Text of message communicated through channel
          example: "Promotion time start now!"
        channel_fallback_message_text:
          type: string
          optional: true
          description: Message communicated through fallback channel (secondary priority)
          example: "Don't miss promotion time!"
        recommendation_details:
          type: array
          optional: true
          descritpion: array of object that contains recommended products for each customer in audience
          items:
            $ref: '#/components/schemas/ContentApiRecommendations'
    ContentApiRecommendations:
      type: object
      properties:
        customer_id:
          type: string
          example: "125262"
        recommended_products:
          type: array
          optional: true
          description: List of products recommended and sent through campaigns
          example: ["SKU-1", "SKU-5262", "SKU-2622"]
    CampaignContentResponse:
      type: object
      properties:
        cid:
          type: string 
          optional: false
          example: "55463"
        campaign_name:
          type: string 
          description: Name of campaign inputed by user while creating campaign
          optional: false
          example: Birhtday Campaign
        customer_id: 
          type: string
          optional: false
          example: "194092059"
        message_id:
          type: string
          optional: false
          description: Unique id (string identifier) to be used to recognize each message
          example: campaing_name-client-customer_id-increment
        channel_message_text:
          type: string
          optional: true
          description: Text of message communicated through channel
          example: "Promotion time start now!"
        channel_fallback_message_text:
          type: string
          optional: true
          description: Message communicated through fallback channel (secondary priority)
          example: "Don't miss promotion time!"
        channel_image_url:
          type: string
          optional: true
          description: Image represented in Viber message (only for Viber)
          example: "www.shop.com/image/image-1.jpg"
        is_content_ready:
          type: boolean
          optional: false
          default: false
          description: "If content in campaign depends on recommender output and images should be ready, this flag must be set to true so campaign can be sent"
          example: true
    CampaignContentUpdatePayload:
      type: object
      properties:
        channel_button_link:
          type: string
          optional: true
          description: "Viber button lead to this URL (only for Viber)"
          example: "www.shop.com/promotions"
        channel_image_url:
          type: string
          optional: true
          description: "Image represented in Viber message (only for Viber)"
          example: "www.shop.com/image/campaign_id-campaign_date-product1.jpg"
        is_content_ready:
          type: boolean
          optional: true
          default: false
          description: "If content in campaign depends on recommender output and images should be ready, this flag must be set to true so campaign can be sent"
          example: true
    CampaignsResponseList:
      type: object
      properties:
        count:
          type: string
          example: "1"
        campaigns:
          type: array
          items:
            $ref: '#/components/schemas/CampaignResponse'
    CampaignDeleted:
      type: object
      properties:
        detail:
          type: string
          example: Campaign deleted successfully
    ProfileInfoDeleted:
      type: object
      properties:
        detail:
          type: string
          example: Profile information deleted successfully
    AbcAudiences:
      type: object
      properties:
        audience_name:
          type: string
          example: AudienceReady
        a_group_percent:
          type: number
          format: float 
          example: 0.25
        b_group_percent:
          type: number
          format: float 
          example: 0.75
        c_group_percent:
          type: number
          format: float 
          example: 0.00
    RequestCampaign:
      type: object
      properties:
        audiences:
          type: array
          optional: false
          example: ["audience-1", "audience-2"]
        campaign_name:
          type: string
          example: new-campaign
        sender:
          type: string
          example: "thingsolverSMS|OrganizationViberSender|sender@business.com"
        author:
          type: string
          example: John Doe
        is_draft:
          type: boolean
          example: true
        is_approved: 
          type: boolean
          example: false
        channel_type:
          type: string
          enum: [email, sms, viber, landing_page, automatic, push_notification]
          example: viber
        is_abc:
          type: boolean
          optional: false
          description: Boolean to recognize if campaign will be send through multiple sub-campaigns, up to 3 different campaings
          example: true
        is_recurring:
          type: boolean
          optional: true 
          description: Boolean to recognize if campaign will be send in reacurring manner
          example: true
        recurring_frequency:
          type: string
          optional: True
          description: Definition of period campaign will be repeated. Format in ISO8601 standard.
          example: P1W
        recurring_until: 
          type: string
          format: date
          optional: True
          description: Date when recurring campaign is ending
          example: "2021-11-11"
        campaign_details:
          type: array
          optional: false
          items:
            anyOf:
              - $ref: '#/components/schemas/ACampaignPayload'
              - $ref: '#/components/schemas/BCampaignPayload'
    ACampaignPayload:
      type: object
      properties:
        send_promotion_time:
            type: string
            format: datetime
            example: 2021-11-11 13:00:00
        start_time:
          type: string
          format: datetime
          example: 2021-11-11 12:00:00
        end_time:
          type: string
          format: datetime
          example: 2021-11-11 13:00:00
        do_not_send_window:
          type: array
          description: List of tags used in campaign
          example: ['20', '10']
        tags:
          type: array
          description: List of tags used in campaign
          example: ['sku1', 'sku2']
        recommended_products:
          type: array
          optional: true
          description: List of products sent in campaign
          example: ['sku1', 'sku2']
        channel_subject:
          type: string
          optional: true
          description: Only if Email channel campaign is created - subject of email
          example: sms
        channel_message_text:
          type: string
          optional: true
          description: Text of message communicated through channel
          example: "Promotion time start now!"
        channel_fallback_message_text:
          type: string
          optional: true
          description: Message communicated through fallback channel (secondary priority)
          example: "Don't miss promotion time!"
        channel_button:
          type: string
          optional: true
          description: Text on Viber button (only for Viber)
          example: "Click here"
        channel_button_link:
          type: string
          optional: true
          description: Viber button lead to this URL (only for Viber)
          example: "www.shop.com/promotions"
        channel_image_url:
          type: string
          optional: true
          description: Image represented in Viber message (only for Viber)
          example: "www.shop.com/image/image-1.jpg"
        channel_validity_period:
          type: integer
          optional: true
          description: Period that service will try to send a message in primary channel
          default: 24
          example: 24
        channel_validity_unit:
          type: string
          optional: true
          description: Unit for selected period in channel_validity_period
          enum: [NANOSECONDS, MICROSECONDS, MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS]
          default: HOURS
        channel_fallback_validity_period:
          type: integer
          optional: true
          description: Period that service will try to send a message in secondary channel
          example: 24
        channel_fallback_validity_unit:
          type: string
          optional: true
          description: Unit for selected period in channel_fallback_validity_period
          enum: [NANOSECONDS, MICROSECONDS, MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS]
          default: HOURS
        html_template_id:
          type: string
          optional: true
          description: Used only in Email channel campaigns, represent ID of precreated template
          example: "12345"
        is_personalized:
          type: boolean
          optional: false
          default: false
          description: If content in campaign depends on recommender output
          example: false
        abc_audience_percent: 
          type: number
          format: float
          optional: true
          description: Provide only if abc is true, if want to create 2 campaigns, put 0 in campaign order
          example: 0.25
    BCampaignPayload:
      type: object
      properties:
        send_promotion_time:
          type: string
          format: datetime
          example: 2021-11-11 13:00:00
        start_time:
          type: string
          format: datetime
          example: 2021-11-11 12:00:00
        end_time:
          type: string
          format: datetime
          example: 2021-11-11 13:00:00
        do_not_send_window:
          type: array
          description: List of tags used in campaign
          example: ['20', '10']
        tags:
          type: array
          description: List of tags used in campaign
          example: ['sku1', 'sku2']
        recommended_products:
          type: array
          optional: true
          description: List of products sent in campaign
          example: ['sku1', 'sku2']
        channel_subject:
          type: string
          optional: true
          description: Only if Email channel campaign is created
          example: sms
        channel_message_text:
          type: string
          optional: true
          example: "Promotion time start now!"
        channel_fallback_message_text:
          type: string
          optional: true
          example: "Only for you my dear customer"
        channel_button:
          type: string
          optional: true
          example: "Check out!"
        channel_button_link:
          type: string
          optional: true
          example: "www.shop.com/promotions"
        channel_image_url:
          type: string
          optional: true
          example: "www.shop.com/image/image-2.jpg"
        channel_validity_period:
          type: integer
          optional: true
          default: 24
          example: 2
        channel_validity_unit:
          type: string
          optional: true
          enum: [NANOSECONDS, MICROSECONDS, MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS]
          default: HOURS
        channel_fallback_validity_period:
          type: integer
          optional: true
          description: Validity period for fallback channel
          example: 48
        channel_fallback_validity_unit:
          type: string
          optional: true
          description: Validity unit for fallback channel
          enum: [NANOSECONDS, MICROSECONDS, MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS]
          default: HOURS
        html_template_id:
          type: string
          optional: true
          description: Used only in Email channel campaigns, represent ID of precreated template
          example: "12345"
        is_personalized:
          type: boolean
          optional: false
          default: false
          description: If content in campaign depends on recommender output
          example: True
        abc_audience_percent: 
          type: number
          format: float
          optional: true
          description: Provide only if abc is true, if want to create 2 campaigns, put 0 in campaign order
          example: 75
    ACampaignResponse:
      type: object
      properties:
        cid: 
          type: string
          format: string
          optional: false
          exmaple: 32904
        send_promotion_time:
          type: string
          format: datetime
          optional: false
          example: 2021-11-11 13:00:00
        start_time:
          type: string
          format: datetime
          optional: false
          example: 2021-11-11 12:00:00
        end_time:
          type: string
          format: datetime
          optional: false
          example: 2021-11-11 13:00:00
        tags:
          type: array
          optional: true
          description: List of tags used in campaign
          example: ['sku1', 'sku2']
        recommended_products:
          type: array
          optional: true
          description: Array of products or items sent in campaign messages
          example: ['sku1', 'sku2']
        channel_subject:
          type: string
          optional: true
          description: Only if Email channel campaign is created - subject of email
          example: sms
        channel_message_text:
          type: string
          optional: true
          description: Text of message communicated through channel
          example: "Promotion time start now!"
        channel_fallback_message_text:
          type: string
          optional: true
          description: Message communicated through fallback channel (secondary priority)
          example: "Don't miss promotion time!"
        channel_button:
          type: string
          optional: true
          description: Text on Viber button (only for Viber)
          example: "Click here"
        channel_button_link:
          type: string
          optional: true
          description: Viber button lead to this URL (only for Viber)
          example: "www.shop.com/promotions"
        channel_image_url:
          type: string
          optional: true
          description: Image represented in Viber message (only for Viber)
          example: "www.shop.com/image/image-1.jpg"
        channel_validity_period:
          type: integer
          optional: true
          description: Period that service will try to send a message in primary channel
          default: 24
          example: 24
        channel_validity_unit:
          type: string
          optional: true
          description: Unit for selected period in channel_validity_period
          enum: [NANOSECONDS, MICROSECONDS, MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS]
          default: HOURS
        channel_fallback_validity_period:
          type: integer
          optional: true
          description: Period that service will try to send a message in secondary channel
          example: 24
        channel_fallback_validity_unit:
          type: string
          optional: true
          description: Unit for selected period in channel_fallback_validity_period
          enum: [NANOSECONDS, MICROSECONDS, MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS]
          default: HOURS
        html_template_id:
          type: string
          optional: true
          description: Used only in Email channel campaigns, represent ID of precreated template
          example: "12345"
        is_personalized:
          type: boolean
          optional: false
          default: false
          description: If content in campaign depends on recommender output
          example: false
        abc_audience_percent: 
          type: number
          format: float
          optional: true
          description: "Provide only if abc is true, if want to create 2 campaigns, put 0 in campaign order"
          example: 0.25
    BCampaignResponse:
      type: object
      properties:
        cid: 
          type: string
          format: string
          exmaple: 32904
        send_promotion_time:
          type: string
          format: datetime
          example: 2021-11-11 13:00:00
        start_time:
          type: string
          format: datetime
          example: 2021-11-11 12:00:00
        end_time:
          type: string
          format: datetime
          example: 2021-11-11 13:00:00
        tags:
          type: array
          description: List of tags used in campaign
          example: ['sku1', 'sku2']
        recommended_products:
          type: array
          optional: true
          description: List of sent products or items through campaign
          example: ['sku1', 'sku2']
        channel_subject:
          type: string
          optional: true
          description: Only if Email channel campaign is created
          example: sms
        channel_message_text:
          type: string
          optional: true
          example: "Promotion time start now!"
        channel_fallback_message_text:
          type: string
          optional: true
          example: "Only for you my dear customer"
        channel_button:
          type: string
          optional: true
          example: "Check out!"
        channel_button_link:
          type: string
          optional: true
          example: "www.shop.com/promotions"
        channel_image_url:
          type: string
          optional: true
          example: "www.shop.com/image/image-2.jpg"
        channel_validity_period:
          type: integer
          optional: true
          default: 24
          example: 2
        channel_validity_unit:
          type: string
          optional: true
          enum: [NANOSECONDS, MICROSECONDS, MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS]
          default: HOURS
        channel_fallback_validity_period:
          type: integer
          optional: true
          description: Validity period for fallback channel
          example: 48
        channel_fallback_validity_unit:
          type: string
          optional: true
          description: Validity unit for fallback channel
          enum: [NANOSECONDS, MICROSECONDS, MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS]
          default: HOURS
        html_template_id:
          type: string
          optional: true
          description: Used only in Email channel campaigns, represent ID of precreated template
          example: "12345"
        is_personalized:
          type: boolean
          optional: true
          default: false
          description: If content in campaign depends on recommender output
          example: True
        abc_audience_percent: 
          type: number
          format: float
          optional: true
          description: Provide only if abc is true, if want to create 2 campaigns, put 0 in campaign order
          example: 75
    ViberChannelSendBulk:
      required: 
        - receivers_list
        - viber_text
        - button_text
        - button_url
        - image_url
        - campaign_id
      properties:
        receivers_list:
            type: array
            example: ["3816800000", "3816800001", "3816800002"]
        viber_text:
          type: string
          example: Dear Mr Solver, this is an omni test message
        button_text:
          type: string
          example: More
        button_url:
          type: string
          example: www.thingsolver.com
        image_url:
          type: string
          example: https://thingsolver.com/wp-content/uploads/cropped-things_solver_logo_site-1.png
        viber_validity_period:
          type: integer
          example: 48
        viber_validity_unit:
          type: string
          example: HOURS
        sms_text:
          type: string
          example: Dear Mr Solver, this is a test sms message
        sms_validity_period:
          type: integer
          example: 48
        sms_validity_unit:
          type: string
          example: HOURS
        campaign_id:
          type: string
          example: "01062021"
        message_id:
          type: string
          example: customerName_01062021_personalized_01
    ViberChannelBulkSentSucessfully:
      type: object
      properties:
        message:
          type: string
          format: string
          example: Viber messages sent successfully sucessfully
    ConnectionExternalServiceError:
      type: object
      properties:
        message:
          type: string
          example: There was a problem connecting to an external channel service
    ViberChannelSendPersonalized:
      type: object
      required: 
        - receiver
        - viber_text
        - button_text
        - button_url
        - image_url
        - campaign_id
        - message_id
      properties:
        receiver:
            type: string
            example: "3816800000"
        viber_text:
          type: string
          example: Dear Mr Solver, this is an omni test message
        button_text:
          type: string
          example: More
        button_url:
          type: string
          example: www.thingsolver.com
        image_url:
          type: string
          example: https://thingsolver.com/wp-content/uploads/cropped-things_solver_logo_site-1.png
        viber_validity_period:
          type: integer
          example: 48
        viber_validity_unit:
          type: string
          example: HOURS
        sms_text:
          type: string
          example: Dear Mr Solver, this is a test sms message
        sms_validity_period:
          type: integer
          example: 48
        sms_validity_unit:
          type: string
          example: HOURS
        campaign_id:
          type: string
          example: "01062021"
        message_id:
          type: string
          example: viber_customer_id_01062021_personalized_01
    SmsChannelSendBulk:
      required: 
          - receivers_list
          - sms_text
          - campaign_id
          - message_id
      properties:
        receivers_list:
            type: array
            example: ["3816800000", "3816800001", "3816800002"]
        sms_text:
          type: string
          example: Dear Mr Solver, this is a test message
        campaign_id:
          type: string
          example: "01062021"
        message_id:
          type: string
          example: sms_customer_id_01062021_personalized_01
    EmailChannelSendBulk:
      required: 
          - receivers_mail_list
          - text
          - html
          - template_id
          - campaign_id
          - message_id
      properties:
        receivers_mail_list:
            type: array
            example: ["office@company.com", "test@thingsolver.com", "campaign@thingsolver.com"]
        sender_email:
          type: string
          example: somebody@thingsolver.com
        sender_name:
          type: string
          example: SomeBody
        subject: 
          type: string 
          example: Hello World
        body_html:
          type: string
          example: "<HTML> <head>Thigs is a Header</head>"
        body:
          type: string
          example: Dear Mr Solver, this is a test message
        template:
          type: string 
          example: "12345"
        vendor_audience_id: 
          type: string
          example: VendorId
        campaign_id:
          type: string
          example: "01062021"
        message_id:
          type: string
          example: email_customer_id_01062021_personalized_01
    SmsChannelBulkSentSucessfully:
      type: object
      properties:
        message:
          type: string
          example: SMS messages sent successfully
    EmailChannelBulkSentSucessfully:
      type: object
      properties:
        message:
          type: string
          example: Emails sent successfully
    SmsChannelSendPersonalized:
      required: 
          - receiver
          - sms_text
          - campaign_id
          - message_id
      properties:
        receiver:
            type: string
            example: "3816800000"
        sms_text:
          type: string
          example: Dear Mr Solver, this is a test message
        campaign_id:
          type: string
          example: "01062021"
        message_id:
          type: string
          example: customerName_01062021_personalized_01
    SolverAppWidgetList:
      type: array  
      items:
        $ref: '#/components/schemas/SolverAppWidget'
    SolverAppWidgetCreate:
      type: object
      properties:
        app_section:
          type: string 
          example: app section example 
        is_active:
          type: boolean 
          example: false
        widget_id:
          type: string 
          example: widget-example-1
        widget_label:
          type: string 
          example: widget-label-tag
        widget_endpoint:
          type: string 
          example: https://www.example-company.com/widget-example-1
        widget_type:
          type: string 
          example: widget 
        widget_suffix:
          type: string 
          example: wid
    SolverAppWidget:
      type: object
      properties:
        app_id:
          type: string 
          example: widget-01
        app_section:
          type: string 
          example: app section example 
        client_name:
          type: string 
          example: test company 
        is_active:
          type: boolean 
          example: false
        widget_id:
          type: string 
          example: widget-example-1
        widget_label:
          type: string 
          example: widget-label-tag
        widget_endpoint:
          type: string 
          example: https://www.example-company.com/widget-example-1
        widget_type:
          type: string 
          example: widget 
        widget_suffix:
          type: string 
          example: wid
    ContactPolicyListResponse_results:
      type: object
      properties:
        customer_id:
          type: string
          example: johny
        channel_name:
          type: string
          example: sms
        is_allowed:
          type: boolean
        is_preferred:
          type: boolean
        contact_policy_value:
          type: number
          example: 1
        contact_policy_frequency:
          type: string
          example: weekly
        modified_at:
          type: string
          example: 2020-11-03 14:26:37.762978
    ContactPolicyRequest:
      type: object
      properties:
        channel_name:
          type: string
          example: Viber
        is_allowed:
          type: boolean
        is_preferred:
          type: boolean
        contact_policy_value:
          type: number
          example: 1
        contact_policy_frequency:
          type: string
          example: weekly
    ContactPolicyResponse:
      type: object
      properties:
        customer_id:
          type: string
          example: john
        channel_name:
          type: string
          example: viber
        is_allowed:
          type: boolean
        is_preferred:
          type: boolean
        contact_policy_value:
          type: number
          example: 1
        contact_policy_frequency:
          type: string
          example: weekly
        modified_at:
          type: string
          example: 2020-11-03 14:26:37.727303
    ContactPolicyListResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContactPolicyListResponse_results'
    ContactPolicyAlreadyExists:
      type: object
      properties:
        detail:
          type: string
          example: Policy already exists
    ContactPolicyNotFound:
      type: object
      properties:
        detail:
          type: string
          example: Not found
    ContactPolicyDeleteResponse:
      type: object
      properties:
        status:
          type: string
          example: Successfully deleted contact policy for customer johny and channel sms.
    ContactPolicyvalidateionRequest:
      type: object
      properties:
        customer_ids:
          type: array
          items:
            type: string
            example: johny
    DatabaseConnectionError:
      type: object
      properties:
        message:
          type: string
          example: There was a problem connecting to database
    ProcessingMandateCreate:
      type: object
      properties:
        location:
          type: string
          example: webshop
        is_allowed_processing:
          type: boolean
          example: true
        modified_at:
          type: string
          example: "2020-11-02T15:47:50.839083"
    ProcessingMandateList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProcessingMandate'
    ProcessingMandate:
      type: object
      properties:
        customer_id:
          type: string
          example: john
        location:
          type: string
          example: webshop
        is_allowed_processing:
          type: boolean
          example: true
        modified_at:
          type: string
          example: 2020-11-02T15:47:50.839083
    ColorSchemaMetaList:
      type: object 
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ColorSchemaMeta'
    ColorSchemaMeta:
      type: object
      properties:
        client_name:
          type: string
          example: client name
        color_schema_id:
          type: string
          example: color schema id 
        color_schema_css:
          type: string
          example: /css/schemas/solver-white.css
        color_schema_logo:
          type: string
          example: /pictures/logos/thing-solver-logo.png
        color_schema_favicon:
          type: string
          example: /favicons/thing-solver.fav
        color_schema_pictures:
          type: string
          example: /photos/silver-white/*.png
        date_modified:
          type: string
          format: date
          example: 2020-08-24
    ColorSchemaMetaCreate:
      type: object
      properties:
        color_schema_css:
          type: string
          example: /css/schemas/solver-white.css
        color_schema_logo:
          type: string
          example: /pictures/logos/thing-solver-logo.png
        color_schema_favicon:
          type: string
          example: /favicons/thing-solver.fav
        color_schema_pictures:
          type: string
          example: /photos/silver-white/*.png
        date_modified:
          type: string
          format: date
          example: 2020-08-24
    ColorSchemaMetaDeletedSucessfully:
      type: object
      properties:
        message:
          type: string
          example: Color schema meta deleted sucessfully
    ColorSchemaMetaCreatedSucessfully:
      type: object
      properties:
        message:
          type: string
          example: Color schema meta created sucessfully
    ColorSchemaMetaUpdatedSucessfully:
      type: object
      properties:
        message:
          type: string
          example: Color schema meta updated sucessfully
    ColorSchemaMetaDoesNotExist:
      type: object
      properties:
        message:
          type: string
          example: Color schema meta does not exist, please use POST to create it
    ColorSchemaMetaAlreadyExists:
      type: object
      properties:
        message:
          type: string
          example: Color schema meta already exists, please use PUT to update or DELETE to delete it
    ServiceMetaDeletedSucessfully:
      type: object
      properties:
        message:
          type: string
          example: Service meta deleted sucessfully
    ServiceMetaCreatedSucessfully:
      type: object
      properties:
        message:
          type: string
          example: Service meta created sucessfully
    ServiceMetaUpdatedSucessfully:
      type: object
      properties:
        message:
          type: string
          example: Service meta updated sucessfully
    ServiceMetaDoesNotExist:
      type: object
      properties:
        message:
          type: string
          example: Service meta does not exist, please use POST to create it
    ServiceMetaAlreadyExists:
      type: object
      properties:
        message:
          type: string
          example: Service meta already exists, please use PUT to update or DELETE to delete it
    ServiceMeta:
      type: object
      properties:
        client_name:
          type: string
          example: client-1
        service_id:
          type: string
          example: smart-segmentation
        service_name:
          type: string
          example: Personalize API
        service_type:
          type: string
          example: api
        service_category:
          type: string
          example: business-api
        service_icon_name:
          type: string
          example: /icons/personalize.png
        is_active:
          type: boolean
          example: true
        date_modified:
          type: string
          format: date
          example: 2020-08-24
        description:
          type: string
          example: Description Example 
          default: No description
        is_favourite:
          type: boolean 
          example: true
    ServiceMetaCreate:
      type: object
      properties:
        service_name:
          type: string
          example: Personalize API
        service_type:
          type: string
          example: api
        service_category:
          type: string
          example: business-api
        service_icon_name:
          type: string
          example: /icons/personalize.png
        is_active:
          type: boolean
          example: true
        date_modified:
          type: string
          format: date
          example: 2020-08-24
        description:
          type: string
          example: Description Example 
          default: No description
        is_favourite:
          type: boolean 
          example: true
    ServiceMetaList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceMeta'
    MetaDeletedSucessfully:
      type: object
      properties:
        message:
          type: string
          example: Meta deleted sucessfully
    MetaCreatedSucessfully:
      type: object
      properties:
        message:
          type: string
          example: Meta created sucessfully
    MetaUpdatedSucessfully:
      type: object
      properties:
        message:
          type: string
          example: Meta updated sucessfully
    Meta:
      type: object
      properties:
        client_name:
          type: string
          example: Client_1
        currency:
          type: string
          example: RSD
        currency_decimal_delimiter:
          type: string
          example: ','
        datetime_format:
          type: string
          example: yyyy-mm-dd
        timezone:
          type: string
          example: UTC+1
    MetaRequest:
      type: object
      properties:
        currency:
          type: string
          example: RSD
        currency_decimal_delimiter:
          type: string
          example: ','
        datetime_format:
          type: string
          example: yyyy-mm-dd
        timezone:
          type: string
          example: UTC+1
    inline_response_200_2:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SegmentsMeta'
    MetaDoesNotExist:
      type: object
      properties:
        message:
          type: string
          example: Meta does not exist, please use POST to create it
    SegmentsMetaDeletedSucessfully:
      type: object
      properties:
        message:
          type: string
          example: Segment deleted sucessfully
    SegmentsMetaCreate:
      type: object 
      properties:
        segment:
          type: string
          example: "0"
        segment_name:
          type: string
          example: dormant
        segment_color:
          type: string
          example: red
    SegmentsMetaList:
      type: object
      properties:
        results:
          type: array
          items: 
              $ref: '#/components/schemas/SegmentsMeta'
    SegmentsMeta:
      type: object
      properties:
        client_name:
          type: string
          example: client-1
        model_id:
          type: string
          example: rfmt-segmentation
        segment:
          type: string
          example: "0"
        segment_name:
          type: string
          example: dormant
        segment_color:
          type: string
          example: red
    MetaAlreadyExists:
      type: object
      properties:
        message:
          type: string
          example: Meta already exists, please use PUT to update or DELETE to delete it
    Placeholder:
      type: object
      properties:
        message:
          type: string
          example: This is a placeholder response
    CustomerTbd:
      type: object
      properties:
        info:
          type: string
          example: tbd
    NotAuthorized:
      type: object
      properties:
        message:
          type: string
          example: Not authorized!
    NotExist:
      type: object
      properties:
        message:
          type: string
          example: str(error)
    Error:
      type: object
      properties:
        message:
          type: string
          example: There was a problem while fetching data
    BulkInsertItemsResponseMessage:
      type: object
      example: {"message": "Total amount of 2 items created!"}
    BulkInsertCustomersResponseMessage:
      type: object
      properties:
        message: 
          type: string
          example:  "Total amount of 2 customers created!"
    DemographicsPost:
      type: object
      properties:
        gender:
          type: string
          example: male
        address:
          type: string
          example: 3623 Kuhl Avenue
        birth_date:
          type: string
          format: date
          example: 1992-05-12
        income:
          type: number
          example: 3572.34
        education:
          type: string
          example: PhD
        employement:
          type: string
          example: self-employed
        company:
          type: string
          example: Example Company Limited
    Demographics:
      type: object
      properties:
        uid:
          type: string
          example: "55463"
        gender:
          type: string
          example: male
        address:
          type: string
          example: 3623 Kuhl Avenue
        birth_date:
          type: string
          format: date
          example: 1992-05-12
        income:
          type: number
          example: 3572.34
        education:
          type: string
          example: PhD
        employement:
          type: string
          example: self-employed
        company:
          type: string
          example: Example Company Limited
    PurchasedItems:
      type: object
      properties:
        purchase_datetime:
          type: string
          format: date
        monetary:
          type: number
          format: float
          example: 232.43
        basket:
          type: array
          items:
            $ref: '#/components/schemas/PurchasedItems_items'
        location:
          type: string
          example: store/web
        address:
          type: string
          example: store address or url
    CustomerBehaviour:
      type: object
      properties:
        uid:
          type: string
          example: "88736231"
        activation:
          type: object
          properties:
            purchase_datetime:
              type: string
              format: date
            location:
              type: string
              example: store/web
            address:
              type: string
              example: store address or url
        best_busket:
          $ref: '#/components/schemas/BestBusket'
        first_purchase:
          $ref: '#/components/schemas/PurchasedItems'
        last_purchase:
          $ref: '#/components/schemas/PurchasedItems'
        customer_activity:
          $ref: '#/components/schemas/CustomerActivities'
    CustomerBehaviourPost:
      type: object
      properties:
        activation:
          type: object
          properties:
            purchase_datetime:
              type: string
              format: date
            location:
              type: string
              example: store/web
            address:
              type: string
              example: store address or url
        best_busket:
          $ref: '#/components/schemas/BestBusket'
        first_purchase:
          $ref: '#/components/schemas/PurchasedItems'
        last_purchase:
          $ref: '#/components/schemas/PurchasedItems'
        customer_activity:
          $ref: '#/components/schemas/CustomerActivities'
            
    CustomerActivities:
      type: object
      properties:
        uid:
          type: string
          example: "88736231"
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
    Activity:
      type: object
      properties:
        segmentation_datetime:
          type: string
          format: datetime
          example: "2020-09-09 13:42:21"
        recency:
          type: integer
          example: 20
        frequency:
          type: integer
          example: 11
        monetary:
          type: number
          format: float
          example: 10
        tenure:
          type: integer
          example: 98
        call_center_interactions:
          type: number
          format: float
          example: 12.23
        total_recency:
          type: integer
          format: float
          example: 21
        total_frequency:
          type: integer
          format: float
          example: 23
        total_monetary:
          type: number
          format: float
          example: 19.87
        total_tenure:
          type: integer
          example: 29
        total_call_center_interactions:
          type: integer
          example: 21
    BestBusket:
      type: object
      properties:
        purchase_datetime:
          type: string
          format: date
          example: 2020-05-12
        location:
          type: string
          example: store/web
        address:
          type: string
          example: store address or url
        monetary:
          type: number
          example: 123121
        total_items:
          type: number
          example: 5
        basket:
          type: array
          items:
            $ref: '#/components/schemas/BestBusket_items'
    Recommendations:
      type: object
      properties:
        uid:
          type: string
          example: "88736231"
        model_id:
          type: string
          example: "leaflet"
        calculation_datetime:
          type: string
          format: datetime
          example: "2021-09-11 19:00:00"
        recommendations:
          type: array
          items:
            $ref: '#/components/schemas/Recommendations_recommendations'
    RecommendationsPost:
      type: object
      properties:
        calculation_datetime:
          type: string
          format: datetime
          example: "2021-09-11 19:00:00"
        recommendations:
          type: array
          items:
            $ref: '#/components/schemas/Recommendations_recommendations'
    CampaignMetaForUser:
      type: object
      properties:
        uid:
          type: string
          example: "88736231"
        campaign:
          $ref: '#/components/schemas/CampaignResponse'
        propensity:
          $ref: '#/components/schemas/CampaignMetaForUser_propensity'
        recommendations:
          type: array
          items:
            $ref: '#/components/schemas/Recommendations_recommendations'
    CustomerCampaigns:
      type: object
      properties:
        cid:
          type: string
          example: 2021-03-09-Campaign1
        date_created:
          type: string
          format: datetime
          example: 2021-03-09T00:01:07
        date_modified:
          type: string
          format: nullable
        audience_id:
          type: string
          example: audience1
        name:
          type: string
          example: Campaign1
        tags:
          type: array
          items:
            type: string
            example: New
        start_time:
          type: string
          format: datetime
          example: 2021-03-11T00:00:00
        end_time:
          type: string
          format: datetime
          example: 2021-03-31T00:00:00
        send_promotion_time:
          type: string
          format: datetime
          example: 2021-03-17T00:00:00
        budget:
          type: number
          example: 40000
        author:
          type: string
          example: John Doe
        is_approved:
          type: boolean
          example: true
        is_draft:
          type: boolean
          example: false
        sender:
          type: string
          example: New Sender
        channel_subject:
          type: string
          example: Company
        channel_type:
          type: string
          example: Sms
        channel_message_text:
          type: string
          example: This is a campaign meessage
        channel_fallback_message_text:
          type: string
          example: Fallback text
        channel_button:
          type: string
          example: ""
        channel_button_link:
          type: string
          example: ""
        channel_image_url:
          type: string
          example: ""
        validity_period:
          type: number
          example: 24
        validity_unit:
          type: string
          example: HOURS
        html_template_id:
          type: string
          example: ""
    LeafletExported:
      type: string
      example: Product list exported successfully!!
    AudienceFinished:
      type: string
      example: Audience created successfully!!
    AudienceCanceled:
      type: string
      example: Canceled!
    AudienceDeleted:
      type: string
      example: Audience deleted successfully!
    Audience:
      type: object
      properties:
        uid:
          type: string
          example: "88736231"
        audience:
          $ref: '#/components/schemas/Audience_audience'
    Segmentation:
      type: object
      properties:
        uid:
          type: string
          example: "88736231"
        smid:
          type: string
          enum:
          - rfmt
          - rfmt-plus
          - rfmtcc
          - rfmtlv
        segment:
          type: string
          example: "1"
        scoring_datetime:
          type: string
          format: datetime
          example: "2021-09-11 15:00:00"
        transitions:
          type: array
          items:
            $ref: '#/components/schemas/PersonalizeSegmentationTransitions_transitions'
    SegmentationPost:
      type: object
      properties:
        segment:
          type: string
          example: "1"
        scoring_datetime:
          type: string
          format: datetime
          example: "2021-09-11 15:00:00"
        transitions:
          type: array
          items:
            $ref: '#/components/schemas/PersonalizeSegmentationTransitions_transitions'

    ChurnScore:
      type: object
      properties:
        uid:
          type: string
          example: "88736231"
        predicted_label:
          type: string
          example: "1"
        score:
          type: number
          example: 0.6
    FraudScore:
      type: object
      properties:
        uid:
          type: string
          example: "88736231"
        predicted_label:
          type: string
          example: "1"
        score:
          type: number
          example: 0.6
    CLVResponse:
      type: object
      properties:
        uid:
          type: string
          example: "1005"
        clv:
          type: array
          items:
            $ref: '#/components/schemas/CLV'
    CLVResponsePost:
      type: object
      properties:
        clv:
          type: array
          items:
            $ref: '#/components/schemas/CLV'
    CLV:
      type: object
      properties:
        period:
          type: string
          example: "ALL"
        score:
          type: number
          format: float
          example: 19.52
        measure:
          type: string
          example: "EUR"
        scoring_datetime:
          type: string
          format: datetime
          example: "2021-09-11 15:00:00"
    CharacteristicCustomersList:
      type: array
      items:
        $ref: '#/components/schemas/CharacteristicCustomer'
    CharacteristicCustomer:
      type: object
      properties:
        uid:
          type: string
          example: "55463"
        gender:
          type: string
          example: male
        address:
          type: string
          example: "New Mount 123"
        birth_date:
          type: string
          format: date
          example: "1992-05-12"
        income:
          type: number
          format: float
          example: 3572.34
        education:
          type: string
          example: PhD
        employement:
          type: string
          example: self-employed
        company:
          type: string
          example: Example Company Limited
        clv_score:
          type: number
          format: float
          example: 20.21
        rfmt_segmentation:
          type: number
          format: float
          example: 12.32
        recency:
          type: integer
          example: 20
        frequency:
          type: integer
          example: 11
        monetary:
          type: number
          format: float
          example: 10.21
        tenure:
          type: integer
          example: 98
    CustomNumberInfo:
      type: object
      properties:
        uid:
          type: string
          example: "88736231"
        nid:
          type: string
          example: special-points
        value:
          type: number
          example: 10000.23
        label:
          type: string
          example: Special Points
    CustomDescriptionInfo:
      type: object
      properties:
        uid:
          type: string
          example: "88736231"
        did:
          type: string
          example: external-system-info
        label:
          type: string
          example: External Info
        value:
          type: string
          example: Special Customer
    AdditionalInfoResponse:
      type: object
      properties:
        uid:
          type:
          example: "88736231"
        additional_id:
          type: string
          example: special-points
        value:
          type: 
            - string
            - integer
            - array
            - number
          example: 10000.23
        label:
          type: string
          example: Special Points
    AdditionalInfo:
      type: object
      properties:
        additional:
        type: List
        items: 
          type: object
          properties:
            type:
              type: string
              example: float
            value:
              type: number
              example: 10000.23
            label:
              type: string
              example: Special Points
    PropensityToBuy:
      type: object
      properties:
        uid:
          type: string
          example: "88736231"
        propensity:
          type: array
          items:
            $ref: '#/components/schemas/PropensityToBuyPrediction'
    PropensityItemModel:
      type: object
      properties:
        uid:
          type: string
          example: customer-100
        item:
          type: string
          example: sku-100
        predicted_label:
          type: string
          example: growing
        score:
          type: number
          format: float
          example: 12.20
    PropensityToBuyPrediction:
      type: object
      properties:
        predicted_label:
          type: string
          example: "1"
        score:
          type: number
          example: 0.6
        period:
          type: string
          example: 2m
    PropensityToBuyForCampaign:
      type: object
      properties:
        uid:
          type: string
          example: "88736231"
        cid:
          type: string
          example: "14"
        predicted_label:
          type: string
          example: "1"
        score:
          type: number
          example: 0.6
        period:
          type: string
          example: 2m
    CustomerPurchases:
      type: object
      properties:
        uid:
          type: string
          example: UID-9f3d05fc-34e0-460b-9fe2-23201b760005
        purchases:
          type: array
          items:
            $ref: '#/components/schemas/CustomerPurchases_purchases'
    CustomerEvents:
      type: object
      properties:
        uid:
          type: string
          example: UID-9f3d05fc-34e0-460b-9fe2-23201b760005
        interactions:
          type: array
          items:
            $ref: '#/components/schemas/CustomerEvents_interactions'
    FileUpload:
      type: string
      format: binary
    FileUploadResponse:
      type: object
      properties:
        message:
          type: string
          example: 'Successfully uploaded file: forecast_input.csv'
    FileIsInvalid:
      type: object
      properties:
        message:
          type: string
          example: File is not valid
    ObjectStorageError:
      type: object
      properties:
        message:
          type: string
          example: Cannot connect to object storage
    FileLibraryResponse:
      type: object
      properties:
        file_library:
          type: array
          example:
          - forecast_data_input.csv
          - test_data.csv
          - test.csv
          items:
            type: string
    FileLibraryError:
      type: object
      properties:
        file_library:
          type: string
          example: Error message
    FilePreviewResponse:
      type: object
      properties:
        file:
          type: array
          items:
            $ref: '#/components/schemas/FilePreviewResponse_file'
    FilePreviewError:
      type: object
      properties:
        file:
          type: string
          example: Error message
    ForecastPreviewConfiguration:
      type: object
      properties:
        configuration:
          $ref: '#/components/schemas/ForecastPreviewConfiguration_configuration'
    ForecastPreviewResponse:
      type: object
      properties:
        preview_forecast:
          type: string
          example: Preview started
        task_id:
          type: string
          example: ABCD
    FileNotFound:
      type: object
      properties:
        preview_forecast:
          type: string
          example: File not found
        task_id:
          type: string
          example: Not defined
    FileNotExist:
      type: object
      properties:
        file:
          type: string
          example: File does not exist
    DeleteFileResponse:
      type: object
      properties:
        file:
          type: string
          example: Successfully deleted.
    UnprocessableEntity:
      type: object
      properties:
        preview_forecast:
          type: string
          example: Time steps forecast must be integer value!
        task_id:
          type: string
          example: Not defined
    RequstedRangeNotSatisfiable:
      type: object
      properties:
        preview_forecast:
          type: string
          example: Requested range not satisfable!
        task_id:
          type: string
          example: Not defined
    InvalidFileName:
      type: object
      properties:
        preview_forecast:
          type: string
          example: forecast_input.csv does not exist
        task_id:
          type: string
          example: Not defined
    ForecastPreviewError:
      type: object
      properties:
        preview_forecast:
          type: string
          example: Error message
        task_id:
          type: string
          example: Not defined
    ForecastStatus:
      type: object
      properties:
        status:
          type: string
    ForecastStatusPending:
      type: object
      properties:
        status:
          type: string
          example: PENDING
    ForecastStatusFailure:
      type: object
      properties:
        status:
          type: string
          example: FAILURE
    ForecastStatusError:
      type: object
      properties:
        status:
          type: string
          example: Error message
    ForecastPreviewResults:
      type: object
      properties:
        MAE:
          type: number
          example: 298.83
        Parameters:
          $ref: '#/components/schemas/ForecastPreviewResults_Parameters'
        Prediction:
          type: array
          items:
            type: number
            example: 772
        Real:
          type: array
          items:
            type: number
            example: 665
        Time:
          type: array
          items:
            type: string
            format: date
        model_id:
          type: string
          example: 'FBProphet'
    ForecastPreviewResultsError:
      type: object
      properties:
        preview_result:
          type: string
          example: Error message
    ForecastSchedulePreview:
      type: object
      properties:
        preview_forecast_schedule:
          type: object
          properties:
            number_of_experiments:
              type: number
              example: 3
            inactive_experiments:
              type: number
              example: 3
            active_experiments:
              type: number
              example: 0
            scheduled_experiments:
              type: array
              items:
                type: object
                properties:
                  experiment_id:
                    type: string
                    example: "experiment1"
                  imported_datetime:
                    type: string
                    example: "2021-07-30 13:39:47"
                  model_id:
                    type: string
                    example: "FBProphet"
                  model_parameters:
                    type: object
                    properties:
                      changepoint_prior_scale:
                        type: number
                        example: 0.5
                      holidays_prior_scale:
                        type: number
                        example: 0.1
                      n_changepoints: 
                        type: number
                        example: 5
                      seasonality_mode:
                        type: string
                        example: "multiplicative"
                  forecast_setup:
                    type: object
                    properties:
                      file_name:
                        type: string
                        example: "file.csv"
                      entity_column:
                        type: string
                        example: "entity_column_name"
                      timestamp_column:
                        type: string
                        example: "timestamp_column_name"
                      target_column:
                        type: string
                        example: "target_column_name"
                      additional_columns:
                        type: array
                        example: ["additional_column_name"]
                      time_steps_forecast:
                        type: number
                        example: 10
                      entity_list:
                        type: array
                        example: ["entity1"]
                  scheduled_datetime_start:
                    type: string
                    example: "2021-06-04 15:05:00"
                  scheduled_datetime_end:
                    type: string
                    example: "2021-06-04 15:05:00"
                  next_forecast_datetime:
                    type: string
                    example: "2021-06-04 15:05:00"
                  last_updated_datetime:
                    type: string
                    example: "2021-06-04 15:05:00"
                  repeat_on:
                    type: string
                    example: "DAILY"
                  owner:
                    type: string
                    example: "test_user"
                  status:
                    type: string
                    example: "scheduled"
                  experiment_status:
                    type: string
                    example: "Stopped"
    ForecastSchedulePreviewError:
      type: object
      properties:
        preview_forecast_schedule:
          type: string
          example: Error message
    ForecastScheduleResponse:
      type: object
      properties:
        schedule_forecast:
          type: string
          example: Successful.
    ForecastScheduleError:
      type: object
      properties:
        schedule_forecast:
          type: string
          example: Error message
    ForecastAlreadyScheduled:
      type: object
      properties:
        schedule_forecast:
          type: string
          example: Forecast run with given ID already exists.
    ModelAlreadyExists:
      type: object
      properties:
        insert_model:
          type: string
          example: Model with given ID already exists.
    InsertModelError:
      type: object
      properties:
        insert_model:
          type: string
          example: Error message
    UpdateForecastScheduleConfiguration:
      type: object
      properties:
        configuration:
          $ref: '#/components/schemas/UpdateForecastScheduleConfiguration_configuration'
    ForecastScheduleConfiguration:
      type: object
      properties:
        configuration:
          $ref: '#/components/schemas/ForecastScheduleConfiguration_configuration'
    DeleteForecastSchedule:
      type: object
      properties:
        delete_forecast_schedule:
          type: string
          example: Successful.
    DeleteForecastScheduleError:
      type: object
      properties:
        delete_forecast_schedule:
          type: string
          example: Error message
    ScheduledForecastNotFound:
      type: object
      properties:
        delete_forecast_schedule:
          type: string
          example: Experiment with given ID not found.
    ForeignKeyError:
      type: object
      properties:
        preview_forecast_schedule:
          type: string
          example: A foreign key constraint fails!
    ForecastRunConfiguration:
      type: object
      properties:
        configuration:
          $ref: '#/components/schemas/ForecastRunConfiguration_configuration'
    ForecastRunResponse:
      type: object
      properties:
        run_forecast:
          type: string
          example: Forecast started
        task_id:
          type: string
          example: ABCD
    ForecastRunError:
      type: object
      properties:
        run_forecast:
          type: string
          example: Error message
    ForecastRunResults:
      type: object
      properties:
        forecast_result:
          $ref: '#/components/schemas/ForecastRunResults_forecast_result'
    ForecastRunResultsError:
      type: object
      properties:
        forecast_result:
          type: string
          example: Error message
    ForecastModelResult:
      type: object
      properties:
        get_model:
          type: object
          properties:
            model_id:
              type: string
              example: "FBProphet"
            model_parameters:
              type: object
              properties:
                param1:
                  type: array
                  items:
                    type: number
                    example: 0.7
                param2:
                  type: array
                  items:
                    type: number
                    example: 0.1
            description:
              type: string
              example: "Facebook Prophet"
            created_datetime:
              type: string
              example: "2021-07-26 11:51:44"
            last_updated_datetime:
              type: string
              example: "2021-07-26 11:51:44"
    ForecastMetricResult:
      type: object
      properties:
        get_model:
          type: object
          properties:
            metric_id:
              type: string
              example: "RMSE"
            metric_name:
              type: string
              example: "Root Mean Squared Error"
            description:
              type: string
              example: "Root Mean Squared Error"
            metric_formula:
              type: string
              example: ""
            created_datetime:
              type: string
              example: "2021-07-26 11:51:44"
            last_updated_datetime:
              type: string
              example: "2021-07-26 11:51:44"
    InsertModelConfiguration:
      type: object
      properties:
        configuration:
          $ref: '#/components/schemas/InsertModelConfiguration_configuration'
    UpdateModelConfiguration:
      type: object
      properties:
        configuration:
          $ref: '#/components/schemas/UpdateModelConfiguration_configuration'
    InsertModelResponse:
      type: object
      properties:
        insert_model:
          type: string
          example: Successful.
    InsertMetricConfiguration:
      type: object
      properties:
        configuration:
          $ref: '#/components/schemas/InsertMetricConfiguration_configuration'
    UpdateMetricConfiguration:
      type: object
      properties:
        configuration:
          $ref: '#/components/schemas/UpdateMetricConfiguration_configuration'
    Segments:
      type: object
      properties:
        virtual_buyers:
          type: array
          items:
            type: string
            example: "2"
    SegmentsShare:
      type: object
      properties:
        virtual_buyers:
          type: array
          items:
            $ref: '#/components/schemas/SegmentsShare_virtual_buyers'
    VirtualBuyerBusketRecommendation:
      type: object
      properties:
        vbid:
          type: integer
          example: 1
        description: 
          type: array
          items:
            $ref: '#/components/schemas/VirtualBuyerSegment'
        recomendation:
          type: array
          items:
            $ref: '#/components/schemas/VirtualBuyerRecommendedItem'
        best_selling_category:
          type: string
          example: Best selling category
        least_selling_category:
          type: string
          example: Best selling category
        least_selling_item:
          type: string
          example: Least selling item
        best_selling_item:
          type: string
          example: Best selling item
    VirtualBuyerRecommendedItem:
      type: object
      properties:
        item:
          type: string
          example: item-example
        score:
          type: number
          format: float
          example: 11.21
        measure: 
          type: string
          example: measure-example
    VirtualBuyerSegment:
      type: object
      properties:
        category:
          type: string
          example: category-example
        score:
          type: number
          format: float
          example: 11.21
        measure: 
          type: string
          example: measure-example
    SegmentsStoreShare:
      type: object
      properties:
        store_id:
          type: string
          example: "223"
        virtual_buyers:
          $ref: '#/components/schemas/SegmentsShare'
    SegmentData:
      type: object
      properties:
        vbid:
          type: string
          example: "2"
        description:
          type: array
          items:
            $ref: '#/components/schemas/SegmentData_description'
        recommedation:
          type: array
          items:
            $ref: '#/components/schemas/SegmentData_recommedation'
        best_selling_category:
          type: string
          example: category_2
        least_selling_category:
          type: string
          example: category_10
        best_selling_item:
          type: string
          example: item_5
        least_selling_item:
          type: string
          example: item_2
    Busket:
      type: object
      properties:
        basket:
          type: array
          items:
            $ref: '#/components/schemas/Busket_basket'
    Predict:
      type: object
      properties:
        vbid:
          type: string
          example: "2"
        description:
          type: array
          items:
            $ref: '#/components/schemas/Predict_description'
        recommedation:
          type: array
          items:
            $ref: '#/components/schemas/Predict_recommedation'
        best_selling_category:
          type: string
          example: category_1
        least_selling_category:
          type: string
          example: category_10
        best_selling_item:
          type: string
          example: item_4
        least_selling_item:
          type: string
          example: item_8
    Trend:
      oneOf:
      - type: object
        properties:
          vbid:
            type: integer
            example: 2
          category:
            type: string
          trend:
            type: string
          trend_value:
            type: number
          trend_measure:
            type: string
      - type: object
        properties:
          vbid:
            type: integer
            example: 2
          item:
            type: string
          trend:
            type: string
          trend_value:
            type: number
          trend_measure:
            type: string
    ItemsToAverage:
      type: object
      properties:
        vbid:
          type: string
          example: "2"
        item:
          type: array
          items:
            $ref: '#/components/schemas/ItemsToAverage_items'
    SegmentationCentroids:
      type: object
      properties:
        model_id:
          type: string
          example: rfmt
        centroids:
          type: array
          items:
            $ref: '#/components/schemas/SegmentationCentroids_centroids'
    SegmentationShares:
      type: object
      properties:
        model_id:
          type: string
          example: rfmt-plus
        region_id:
          type: string
          example: region-example
        city_id:
          type: string
          example: Belgrade
        store_id:
          type: string
          example: store-id-example
        segments:
          type: array
          items:
            $ref: '#/components/schemas/SegmentationShares_segments'
    SegmentationTransitions:
      type: object
      properties:
        model_id:
          type: string
          example: rfmt
        transitions:
          type: array
          items:
            $ref: '#/components/schemas/SegmentationTransitions_transitions'
    SegmentationStoreTransitions:
      type: object
      properties:
        model_id:
          type: string
          example: rfmt
        store_id:
          type: string
          example: new-store
        transitions:
          type: array
          items:
            $ref: '#/components/schemas/SegmentationTransitions_transitions'
    SegmentationCustomerTransitions:
      type: object
      properties:
        model_id:
          type: string
          example: rfmt
        transitions:
          type: array
          items:
            $ref: '#/components/schemas/SegmentationCustomerTransitions_transitions'
    SearchCustomers:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchCustomers_results'
    SearchItems:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchItems_results'
    SearchCampaigns:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchCampaigns_results'
    TouchpointContent:
      type: array
      items:
        type: object
        properties:
          touchpoint_id:
            type: string
            example: touchpoint_1
          identity_type:
            type: string
            example: "customer_id"
          identity_value:
            type: string
            example: "wbdaiow8823891iandiini1239d"
          content:
            type: array
            items:
              type: object
              properties:
                position:
                  type: string
                  example: "0"
                item:
                  $ref: '#/components/schemas/Item'
    ItemResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 25004
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
    ItemResponseListCdc:
      type: object
      properties:
        count:
          type: integer
          example: 25004
        items:
          type: array
          items:
            $ref: '#/components/schemas/ItemsCdc'
    ItemsCdc:
      type: object
      properties:
        chage_capture_date:
          type: string
          format: datetime
          example: "2022-17-01T09:46:24.0000"
        records:
          type: array
          items:
            $ref: '#/components/schemas/Item'
    Items:
      type: array
      items:
        $ref: '#/components/schemas/Item'
    Item:
      type: object
      properties:
        item_id:
          type: string
          example: PID-123123
        item_name:
          type: string
          example: product_1
        alternative_id: 
          type: string
          example: AID-123123
        alternative_name: 
          type: string
          example: Product_1
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Item_category'
        descriptions:
          type: array
          items:
            $ref: '#/components/schemas/Item_descriptions'
        main_image:
          type: string
          example: s3://bucket/path/to/main/image.png
        images:
          type: array
          items:
            type: string
            example: s3://bucket/path/to/main/image2.png
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Item_attributes'
        extended:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        product_price:
          type: number
          example: 3899.99
        original_price:
          type: number
          example: 4989.99
        currency:
          type: string
          example: RSD
        date_added:
          type: string
          format: datetime
          example: "2020-03-12 12:00:00"
        product_url:
          type: string 
          example: https://www.example-company.com/product_1
        is_active:
          type: boolean
          example: true
        is_discount:
          type: boolean
          example: true 
        tags:
          type: string 
          example: "Shoes, Urban, White, Rainy"
        recommended_items:
          type: object
          properties:
            similar: 
              type: array
              items:
                $ref: '#/components/schemas/ItemToItem_recommendations'
            complementary: 
              type: array
              items:
                $ref: '#/components/schemas/Complementary_recommendations'
    RecommendationItems: 
      type: object
      properties: 
        similar: 
          type: array
          items: 
            $ref: '#/components/schemas/ItemToItem_recommendations'
        complementary: 
          type: array 
          items: 
            $ref: '#/components/schemas/Complementary_recommendations'
    RecommendSimilarItems: 
      type: array
      items:
        $ref: '#/components/schemas/ItemToItem_recommendations'
    RecommendComplementaryItems: 
      type: array
      items:
        $ref: '#/components/schemas/Complementary_recommendations'
    CustomField:
      type: array
      properties:
      items:
        allOf:
          - $ref: '#/components/schemas/CustomFieldString'
          - $ref: '#/components/schemas/CustomFieldBoolean'
          - $ref: '#/components/schemas/CustomFieldInteger'
          - $ref: '#/components/schemas/CustomFieldFloat'
    CustomFieldString:
      type: object
      properties:
        custom_field_name:
          type: string
          example: "made in"
        custom_field_value:
          type: string
          example: "Bangladesh"
    CustomFieldBoolean:
      type: object
      properties:
        custom_field_name:
          type: string
          example: "spare shoelaces"
        custom_field_value:
          type: boolean
          example: true
    CustomFieldInteger:
      type: object
      properties:
        custom_field_name:
          type: string
          example: "Guarantee"
        custom_field_value:
          type: integer
          example: 2
    CustomFieldFloat:
      type: object
      properties:
        custom_field_name:
          type: string
          example: "average start"
        custom_field_value:
          type: number
          example: 4.2
    ItemDeleted:
      type: object
      properties:
        detail:
          type: string
          example: Item deleted successfully
    LeafletDeleted:
      type: object
      properties:
        detail:
          type: string
          example: Product list deleted successfully
    LeafletUploaded:
      type: object
      properties:
        status:
          type: string
          example: Product list uplaoded successfully
    LeafletName:
      type: object
      properties:
        leaflet_name:
          type: string
          example: product_list_first_upload 
    TouchpointDeleted:
      type: object
      properties:
        detail:
          type: string
          example: Touchpoint deleted successfully
    RequestItem:
      type: object
      properties:
        item_id:
          type: string
          example: PID-123123
        item_name:
          type: string
          example: product_1
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Item_category'
        descriptions:
          type: array
          items:
            $ref: '#/components/schemas/Item_descriptions'
        main_image:
          type: string
          example: /path/to/main/image
        images:
          type: array
          items:
            type: string
            example: /path/to/photo1
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Item_attributes'
        product_price:
          type: number
          example: 3899.99
        original_price:
          type: number
          example: 4989.99
        currency:
          type: string
          example: RSD
        date_added:
          type: string
          format: datetime
          example: "2019-02-12T19:00:00"
        is_active:
          type: boolean
          example: true
        product_url:
          type: string 
          example: https://www.example-company.com/product_1
        custom:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
    ItemToItem:
      type: object
      properties:
        item_id:
          type: string
          example: PID-123123
        recommendations:
          type: array
          items:
            $ref: '#/components/schemas/ItemToItem_recommendations'  
    CustomersToItem:
      type: object
      properties:
        item_id:
          type: string
          example: PID-123123
        recommendations:
          type: array
          items:
            $ref: '#/components/schemas/CustomersToItem_recommendations'
    ListOfCustomers:
      type: array
      items:
        $ref: '#/components/schemas/Customer'
    Customer:
      type: object
      properties:
        uid:
          type: string
          unique: true
          example: "55463"
        external_uid:
          type: string
          example: "44324"
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        gender:
          type: string
          example: male
        race:
          type: string
          example: caucasian
        address:
          type: string
          example: Example Street 20
        birth_date:
          type: string
          format: date
          example: 1992-02-08
        phone_mobile:
          type: string
          example: "009844532"
        phone_home:
          type: string
          example: "7456420"
        phone_business:
          type: string
          example: "007865543"
        device_token:
          type: string
          example: bk3RNwTe3H0:CI2k_HHwgIpoDKCIZvvDMExUdFQ3P1...
        email_home:
          type: string
          example: john.doe@example.com
        email_business:
          type: string
          example: john@company.com
        income:
          type: number
          example: 3572.34
        education:
          type: string
          example: PhD
        employement:
          type: string
          example: self-employed
        company:
          type: string
          example: Example Company Limited
        consents:
          type: array
          items:
            $ref: '#/components/schemas/Customer_consents'
        cookies:
          type: array
          items:
            type: string
            example: "7183ab6d-f8da-4c0e-a1c2-f07bfb8d296a"
    CustomerDeleted:
      type: object
      properties:
        detail:
          type: string
          example: Customer deleted successfully
    RequestCustomer:
      type: object
      properties:
        external_uid:
          type: string
          example: "44324"
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        gender:
          type: string
          example: male
        race:
          type: string
          example: caucasian
        address:
          type: string
          example: Example Street 20
        birth_date:
          type: string
          format: date
          example: 1992-02-08
        phone_mobile:
          type: string
          example: "009844532"
        phone_home:
          type: string
          example: "7456420"
        phone_business:
          type: string
          example: "007865543"
        device_token:
          type: string
          example: bk3RNwTe3H0:CI2k_HHwgIpoDKCIZvvDMExUdFQ3P1...
        email_home:
          type: string
          example: john.doe@example.com
        email_business:
          type: string
          example: john@company.com
        income:
          type: number
          example: 3572.34
        education:
          type: string
          example: PhD
        employement:
          type: string
          example: self-employed
        company:
          type: string
          example: Example Company Limited
        consents:
          type: array
          items:
            $ref: '#/components/schemas/Customer_consents'
        cookies:
          type: array
          items:
            type: string
            example: 7183ab6d-f8da-4c0e-a1c2-f07bfb8d296a
    CampaignRequest:
      type: object
      properties:
        audiences:
          type: array
          items:
            type: string
            example: "audience-2"
        tags:
          type: array
          items:
            type: string
            example: "tag-example-1"
        send_promotion_time:
          type: string
          format: datetime
          example: 2021-11-11 13:00:00
        name:
          type: string
          example: new-campaign
        sender:
          type: string
          example: "thingsolver"
        start_time:
          type: string
          format: datetime
          example: 2021-11-11 12:00:00
        end_time:
          type: string
          format: datetime
          example: 2021-11-11 13:00:00
        author:
          type: string
          example: John Doe
        is_draft:
          type: boolean
          example: false
        channel_type:
          type: string
          enum: [email, sms, viber, landing_page, automatic, push_notification]
          example: sms
        channel_subject:
          type: string
          example: sms
        channel_message_text:
          type: string
          example: "Promotion time start now!"
        channel_fallback_message_text:
          type: string
          example: "Don't miss promotion time!"
        channel_button:
          type: string
          example: "Click here"
        channel_button_link:
          type: string
          example: "www.shop.com/promotions"
        channel_image_url:
          type: string
          example: "www.shop.com/image/image-1.jpg"
        channel_validity_period:
          type: integer
          example: 24
        channel_validity_unit:
          type: string
          enum: [NANOSECONDS, MICROSECONDS, MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS]
        html_template_id:
          type: string
          example: None
    TestUserRequest:
      type: object
      properties:
        test_user_alias:
          type: string
          example: john-doe
        test_user_phone_number:
          type: string
          example: 381-9231-21342
        test_user_email_address:
          type: string
          example: john-doe@company.com
    TestUserResponse:
      type: object
      properties:
        test_user_id:
          type: integer
          example: 123
        test_user_alias:
          type: string
          example: john-doe
        test_user_phone_number:
          type: string
          example: 381-9231-21342
        test_user_email_address:
          type: string
          example: john-doe@company.com
    ApprovedCampaignResponse:
      type: object
      example: {"detail": "Campaign successfully approved."}
    CampaignAlreadyApprovedResponse:
      type: object
      example: {"detail": "Campaign already approved by username John Doe. 2 more approvals remaining for final campaign approval."}
    TestUserDeletedResponse:
      type: object
      example: {"detail": "Test user with uid 123 successfully deleted."}
    inline_response_200:
      type: object
      properties:
        uid:
          type: string
          example: "88736231"
        campaigns:
          type: array
          example:
          - 2021-03-09-Campaign1
          - 2021-02-05-Campaign2
          - 2021-03-06-Campaign3
          items:
            type: string
    inline_response_200_1:
      type: object
      properties:
        uid:
          type: string
          example: "88736231"
        audiences:
          type: array
          example:
          - PremiumUsers-2021-03-09
          - NewProductInterest-2021-02-05
          - ReturningBuyers-2021-03-06
          items:
            type: string
    PurchasedItems_items:
      type: object
      properties:
        item:
          type: string
          example: "Car loan"
        frequency:
          type: integer
          example: 3
        monetary:
          type: number
          format: float
          example: 232.43
    BestBusket_items:
      type: object
      properties:
        item:
          type: string
          example: "22"
        frequency:
          type: number
          example: 3
        monetary:
          type: number
          format: float
          example: 20.55
    Recommendations_recommendations:
      type: object
      properties:
        item:
          type: string
          example: item-1
        score:
          type: number
          example: 96.44
    CampaignMetaForUser_propensity:
      type: object
      properties:
        label:
          type: string
          example: "1"
        score:
          type: number
          example: 0.6
    Audience_audience_segmentation:
      type: object
      properties:
        rfmt:
          type: array
          items:
            type: string
            example: "0"
        rfmt_plus:
          type: array
          items:
            type: string
            example: "4"
        virtual_buyer:
          type: array
          items:
            type: string
            example: "7"
    Audience_audience_customer_lifetime_value:
      type: object
      properties:
        min_value:
          type: number
          example: 1000
        max_value:
          type: number
          example: 2000
    Audience_audience_demographics:
      type: object
      properties:
        gender:
          type: array
          items:
            type: string
            example: male
    Audience_audience_recommender:
      type: object
      properties:
        products:
          type: array
          items:
            type: string
            example: "45"
    Audience_audience:
      type: object
      properties:
        segmentation:
          $ref: '#/components/schemas/Audience_audience_segmentation'
        audience_name:
          type: string
          example: PremiumUsers
        customer_lifetime_value:
          $ref: '#/components/schemas/Audience_audience_customer_lifetime_value'
        demographics:
          $ref: '#/components/schemas/Audience_audience_demographics'
        audience_id:
          type: string
          example: PremiumUsers-04-03-2021
        recommender:
          $ref: '#/components/schemas/Audience_audience_recommender'
    PersonalizeSegmentationTransitions_transitions:
      type: object
      properties:
        segment_datetime:
          type: string
          format: date
          example: "2020-01-01"
        segment:
          type: string
          example: "1"
    CustomerPurchases_basket:
      type: object
      properties:
        item:
          type: string
          example: SK-3e806f1d-7560-4320-99f3-fd5703efe610
        frequency:
          type: number
          example: 26.1
        price:
          type: number
          example: 23423
    CustomerPurchases_purchases:
      type: object
      properties:
        purchase_datetime:
          type: string
          format: date
          example: 2018-06-24
        purchase_price_sum:
          type: number
          example: 345435
        purchase_price_currency:
          type: string
          example: RSD
        basket:
          type: array
          items:
            $ref: '#/components/schemas/CustomerPurchases_basket'
        location:
          type: string
          example: store
        address:
          type: string
          example: 079 Burke Spurs Lake Charles DC 21342
    CustomerEvents_interactions:
      type: object
      properties:
        eid:
          type: string
          example: Purchase
        interaction_description:
          type: string
          example: purchase
          enum:
          - ""
          - purchase
          - login
          - in-store
          - e-mail sent
        interaction_datetime:
          type: string
          example: 2020-07-21
        interaction_origination:
          type: string
          example: customer
          enum:
          - we
          - customer
    FilePreviewResponse_file:
      type: object
      properties:
        ds:
          type: string
          format: date
        y:
          type: number
          example: 598
        id:
          type: number
          example: 1
    ForecastPreviewConfiguration_configuration:
      type: object
      properties:
        file_name:
          type: string
          example: forecast_input.csv
        entity_column:
          type: string
          example: id
        timestamp_column:
          type: string
          example: ds
        target_column:
          type: string
          example: "y"
        additional_columns:
          type: array
          items:
            type: string
            example: 'z'
        time_steps_forecast:
          type: number
          example: 3
        entity_list:
          type: array
          items:
            type: string
            example: '1'
        chosen_metric:
          type: string
          example: "RMSE"
    InsertModelConfiguration_configuration:
      type: object
      properties:
        description:
          type: string
          example: Facebook Prophet
        model_parameters:
          type: object
          properties:
            param1:
              type: array
              items:
                type: number
                example: 0.7
            param2:
              type: array
              items:
                type: number
                example: 0.01
    InsertMetricConfiguration_configuration:
      type: object
      properties:
        description:
          type: string
          example: Root Mean Squared Error
        metric_name:
          type: string
          example: Root Mean Squared Error
        metric_formula:
          type: string
          example: ""
    UpdateModelConfiguration_configuration:
      type: object
      properties:
        model_parameters:
          type: object
          properties:
            param1:
              type: array
              items:
                type: number
                example: 0.7
            param2:
              type: array
              items:
                type: number
                example: 0.01
    UpdateMetricConfiguration_configuration:
      type: object
      properties:
        description:
          type: string
          example: Root Mean Squared Error
        formula:
          type: string
          example: New formula
    ForecastPreviewResults_Parameters:
      type: object
      properties:
        changepoint_prior_scale:
          type: number
          example: 0.05
        holidays_prior_scale:
          type: number
          example: 0.1
        n_changepoints:
          type: number
          example: 2
        seasonality_mode:
          type: string
          example: additive
        yearly_seasonality:
          type: boolean
    ForecastScheduleConfiguration_configuration_model_parameters:
      type: object
      properties:
        changepoint_prior_scale:
          type: number
          example: 0.5
        holidays_prior_scale:
          type: number
          example: 0.1
        n_changepoints:
          type: number
          example: 5
        seasonality_mode:
          type: string
          example: multiplicative
    ForecastScheduleConfiguration_configuration_forecast_setup:
      type: object
      properties:
        file_name:
          type: string
          example: fibi_input.csv
        entity_column:
          type: string
          example: cell_id
        timestamp_column:
          type: string
          example: period_start_time
        target_column:
          type: string
          example: w_active_users_per_cell
        time_steps_forecast:
          type: number
          example: 20
        entity_list:
          type: array
          items:
            type: number
            example: 0
    UpdateForecastScheduleConfiguration_configuration:
      type: object
      properties:
        scheduled_datetime_start:
          type: string
          example: "2021-06-04 15:05:00"
        scheduled_datetime_end:
          type: string
          example: "2021-06-04 15:05:00"
        repeat_on:
          type: string
          example: "MONTHLY"
    ForecastScheduleConfiguration_configuration:
      type: object
      properties:
        experiment_id:
          type: string
          example: experiment2
        model_id:
          type: string
          example: FBProphet
        model_parameters:
          $ref: '#/components/schemas/ForecastScheduleConfiguration_configuration_model_parameters'
        forecast_setup:
          $ref: '#/components/schemas/ForecastScheduleConfiguration_configuration_forecast_setup'
        scheduled_datetime_start:
          type: string
          format: date
        scheduled_datetime_end:
          type: string
          format: date
        owner:
          type: string
          example: maki
        repeat_on:
          type: string
          example: NEVER
    ForecastRunConfiguration_configuration_model_parameters:
      type: object
      properties:
        changepoint_prior_scale:
          type: number
          example: 0.5
        holidays_prior_scale:
          type: number
          example: 0.1
        n_changepoints:
          type: number
          example: 10
        seasonality_mode:
          type: string
          example: multiplicative
    ForecastRunConfiguration_configuration_forecast_setup:
      type: object
      properties:
        file_name:
          type: string
          example: forecast_input.csv
        entity_column:
          type: string
          example: cell_id
        timestamp_column:
          type: string
          example: period_start_time
        target_column:
          type: string
          example: w_active_users_per_cell
        time_steps_forecast:
          type: number
          example: 20
        entity_list:
          type: array
          items:
            type: number
            example: 0
    ForecastRunConfiguration_configuration:
      type: object
      properties:
        experiment_id:
          type: string
          example: experiment3
        model_id:
          type: string
          example: FbProphet
        model_parameters:
          $ref: '#/components/schemas/ForecastRunConfiguration_configuration_model_parameters'
        forecast_setup:
          $ref: '#/components/schemas/ForecastRunConfiguration_configuration_forecast_setup'
    ForecastRunResults_forecast_result:
      type: object
      properties:
        experiment_id:
          type: string
          example: "12345"
        results_path:
          type: string
          example: 12345_forecast_results.csv
    SegmentsShare_virtual_buyers:
      type: object
      properties:
        vbid:
          type: string
          example: "2"
        share_in_sales:
          type: number
          example: 30.50
        measure:
          type: string
          example: percent
    SegmentData_description:
      type: object
      properties:
        category:
          type: string
          example: category_1
        score:
          type: number
          example: 3932
        measure:
          type: string
          example: score
    SegmentData_recommedation:
      type: object
      properties:
        item:
          type: string
          example: item_1
        score:
          type: number
          example: 3932
        measure:
          type: string
          example: score
    Busket_basket:
      type: object
      properties:
        item:
          type: string
          example: item_2
        frequency:
          type: number
          example: 3.1
    Predict_description:
      type: object
      properties:
        category:
          type: string
          example: category_3
        score:
          type: number
          example: 3932
        measure:
          type: string
          example: score
    Predict_recommedation:
      type: object
      properties:
        item:
          type: string
          example: item_2
        score:
          type: number
          example: 3932
        measure:
          type: string
          example: score
    ItemsToAverage_items:
      type: object
      properties:
        item:
          type: string
          example: SK-32432423424
        diff_from_average:
          type: number
          example: 4.5
        diff_type:
          type: string
          example: higher
    SegmentationCentroids_centroids:
      type: object
      properties:
        segment_id:
          type: string
          example: "1"
        recency:
          type: number
          example: 0.2
        frequency:
          type: number
          example: 0.2
        monetary:
          type: number
          example: 0.2
        tenure:
          type: number
          example: 0.2
    SegmentationShares_segments:
      type: object
      properties:
        segment_id:
          type: string
          example: "2"
        instances_count:
          type: number
          example: 23
        percent_share:
          type: number
          example: 14.40
    SegmentationTransitions_from:
      type: object
      properties:
        segment:
          type: string
          example: "2"
        instances_cnt:
          type: number
          example: 52
        value:
          type: number
          example: 444324.234
        value_masure:
          type: string
          example: EUR
    SegmentationTransitions_transitions:
      type: object
      properties:
        segment:
          type: string
          example: "3"
        datetime:
          type: string
          format: date
        instances_cnt:
          type: number
          example: 532
        value:
          type: number
          example: 444324.234
        value_masure:
          type: string
          example: EUR
        from:
          type: array
          items:
            $ref: '#/components/schemas/SegmentationTransitions_from'
    SegmentationCustomerTransitions_customers:
      type: object
      properties:
        uid:
          type: string
          example: uid-12311asda
        status:
          type: string
          example: growing
    SegmentationCustomerTransitions_from:
      type: object
      properties:
        segment:
          type: string
          example: "2"
        instances_cnt:
          type: number
          example: 52
        customers:
          type: array
          items:
            type: string
            example: uid-12311asda
    SegmentationCustomerTransitions_transitions:
      type: object
      properties:
        segment:
          type: string
          example: "3"
        datetime:
          type: string
          format: date
          example: 2020-07-28
        instances_cnt:
          type: number
          example: 532
        customers:
          type: array
          items:
            $ref: '#/components/schemas/SegmentationCustomerTransitions_customers'
        from:
          type: array
          items:
            $ref: '#/components/schemas/SegmentationCustomerTransitions_from'
    SearchCustomers_results:
      type: object
      properties:
        uid:
          type: string
          example: UID-78131f82-274d-4953-8902-e45b9705c228
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Doe
        sex:
          type: string
          format: male
        address:
          type: string
          example: 150 Potter Keys Apt. 995 Lake Brittany MD 96512
        birth_date:
          type: string
          format: date
          example: "1958-09-24"
        phone_mobile:
          type: string
          example: (414)617-4922
        phone_home:
          type: string
          example: (972)140-4890
        phone_business:
          type: string
          example: (267)505-7661
        email_home:
          type: string
          example: john.doe@dignissimamet.edu
        email_business:
          type: string
          example: j.doe@volutpatex.net
        company:
          type: string
          example: Signal West
    SearchItems_results:
      type: object
      properties:
        item:
          type: string
          example: SK-be9572f2-e1da-46de-98a2-163434360c98
        product_name:
          type: string
          example: Iphone 12 Pro
        category:
          type: string
          example: Smartphone
        description:
          type: string
          example: Apple smartphone with iOS 14
        main_image:
          type: string
          example: url1
        images:
          type: array
          items:
            type: string
            example: url1
        variants:
          type: string
          example: pacific-blue
        product_price:
          type: number
          example: 982.98
        currency:
          type: string
          example: EUR
    SearchCampaigns_results:
      type: object
      properties:
        cid:
          type: string
          example: CP-f303b421-1864-4af5-8f23-a58456192a15
        type:
          type: string
          example: static
        name:
          type: string
          example: Summer Sale
        author:
          type: string
          example: John Doe
        description:
          type: string
          example: This is summer sale campaigh
    LeafletResponse:
      type: object
      properties:
        response: 
          type: string 
          example: Product list created
    LeafletsProductFiles:
      type: object
      properties: 
        product_list_files:
          type: array
          description: Details for one or multiple groups
          example: ["ProductListFirst", "ProductListFirst_20022022_Scored_21022022","Testproductlist_16022022_scored_19022022", "Week5_04032022"]
    LeafletScoringResponse:
      type: object
      properties:
        product_list_file_name:
          type: string
          example: ProductListFileNameFirst
        product_list_name:
          type: string
          example: VerySmartLeaflet
        product_score_list:
          type: array
          description: Details for one or multiple groups
          items:
            - $ref: '#/components/schemas/SmartLeafletProductScoreList'
        is_draft: 
          type: boolean
          description: If leaflet is draft and only scored, or completely created
          example: True
    SmartLeafletProductScoreList:
      type: object
      properties:
        product_id:
          type: string
          example: secondbestproduct
        product_name:
          type: string 
          example: SKU-5820
        product_recommender_score:
          type: number
          example: 62
          optional: True
        product_frequency_score:
          type: number
          example: 33
          optional: True
        product_quantity_score:
          type: number
          example: 90
          optional: True
        product_stock_availability_score:
          type: number
          example: 78
          optional: True
    LeafletScoringRequest:
      type: object
      properties:
        source_product_list_name:
          type: array
          example: ["ProductList1_load02202022_Scored05022022", "ProductList1_load06202022"]
        score_by:
          description: select features used to score leaflet
          optional: false
          type: array
          items:
            default: RECOMMENDER
            type: string
            enum:
              - RECOMMENDER
              - PURCHASE_FREQUENCY
              - PURCHASE_QUANTITY
              - STOCK
        return_by:
          description: Select aggregation function to return by
          type: array
          optional: true
          items:
            default: AVG
            type: string
            enum:
              - AVERAGE_SCORE
              - BEST_SCORE
              - WORST_SCORE
        save_as:
          type: string
          optional: true
          example: ProductList1_load02202022_Scored05022022
    Item_category:
      type: object
      properties:
        category_type:
          type: string
          example: gender
        category_name:
          type: string
          example: For men
        category_level:
          type: string
          example: "0"
    Item_descriptions:
      type: object
      properties:
        description_name:
          type: string
          example: Language
        description_value:
          type: string
          example: Serbian
    Item_attributes:
      type: object
      properties:
        attribute_name:
          type: string
          example: color
        attribute_value:
          type: string
          example: blue
    ItemToItem_recommendations:
      type: object
      properties:
        item_id:
          type: string
          example: item-1
        score:
          type: number
          example: 96
    Complementary_recommendations:
      type: object
      properties:
        item_id:
          type: string
          example: item-2
        score:
          type: number
          example: 60
    CustomersRequestList:
      type: array
      items:
        $ref: '#/components/schemas/Customer'
    CustomersToItem_recommendations:
      type: object
      properties:
        uid:
          type: string
          example: "88736231"
        score:
          type: number
          example: 96
    Customer_consents:
      type: object
      properties:
        consent_name:
          type: string
          example: viber
        consent_description:
          type: string
          example: Wants to recieve Viber promotions
        consent_acceptance:
          type: boolean
          example: true
    StorageFileUploadRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
          example: 'file.csv'
        filename_path:
          type: string
          example: "test/csv/test.csv"
    StorageListAllFilesInBucketResponse:
      type: array
      items:
          type: string
      example: ["test/", "test/pickle", "test/parquet"]
    StorageBucketNameNotValid:
      type: object
      properties:
        message:
          type: string
          example: Name solver-bucket is not valid.
    StorageBucketNotFound:
      type: object
      properties:
        message:
          type: string
          example: solver-bucket doesn't exist.
    StorageFileUploadResponse:
      type: object
      properties:
        message:
          type: string
          example: File uploaded!
    StorageFileNameNotValid:
      type: object
      properties:
        messagge:
          type: string
          example: Name test/csv/test?.csv is not valid.
    StorageFileExists:
      type: object
      properties:
        message:
          type: string
          example: test/csv/test.csv already exist.
    StorageFileDownloadRequest:
      type: object
      properties:
        filename_path:
          type: string
          example: test/csv/test.csv
    StorageFileDownloadResponse:
        type: string
        format: binary
        example: 'test.csv'
    StorageFileDoesntExist:
      type: object
      properties:
        message:
          type: string
          example: test/csv/test.csv doesn't exist.
    WarehouseEvent:
      type: object
      properties:
        event_id:
          type: string
          example: ''
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        event_arrival_time:
          type: string
          example: ''
        warehouse_id:
          type: string
          example: ''
        item_id:
          type: string
          example: ''
        frequency:
          type: string
          example: ''
        action:
          type: string
          example: '(add, remove item)'
    WarehouseEventRequest:
      type: object
      properties:
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        warehouse_id:
          type: string
          example: ''
        item_id:
          type: string
          example: ''
        frequency:
          type: string
          example: ''
        action:
          type: string
          example: '(add, remove item)'
    SubscriptionEventRequest:
      type: object
      properties:
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        action:
          type: string
          example: '(subscribe, unsubscribe)'
        list:
          type: string
          example: ''
        user_cookie:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    SubscriptionEvent:
      type: object
      properties:
        event_id:
          type: string
          example: ''
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        event_arrival_time:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        action:
          type: string
          example: '(subscribe, unsubscribe)'
        list:
          type: string
          example: ''
        user_cookie:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    VisitEvent:
      type: object
      properties:
        event_id:
          type: string
          example: ''
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        event_arrival_time:
          type: string
          example: ''
        item_id:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        wishlist_name:
          type: string
          example: ''
        location:
          type: string
          example: ''
        monetary:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    VisitEventRequest:
      type: object
      properties:
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        item_id:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        wishlist_name:
          type: string
          example: ''
        location:
          type: string
          example: ''
        monetary:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    WishlistEvent:
      type: object
      properties:
        event_id:
          type: string
          example: ''
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        event_arrival_time:
          type: string
          example: ''
        item_id:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        wishlist_name:
          type: string
          example: ''
        location:
          type: string
          example: ''
        monetary:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    WishlistEventRequest:
      type: object
      properties:
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        item_id:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        wishlist_name:
          type: string
          example: ''
        location:
          type: string
          example: ''
        monetary:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    LogoutEvent:
      type: object
      properties:
        event_id:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        event_arrival_time:
          type: string
          example: ''
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        email:
          type: string
          example: ''
        location:
          type: string
          example: ''
        user_cookie:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    LogoutEventRequest:
      type: object
      properties:
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        email:
          type: string
          example: ''
        location:
          type: string
          example: ''
        user_cookie:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    LoginEvent:
      type: object
      properties:
        event_id:
          type: string
          example: ''
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        event_arrival_time:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        email:
          type: string
          example: ''
        location:
          type: string
          example: ''
        user_cookie:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    LoginEventRequest:
      type: object
      properties:
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        email:
          type: string
          example: ''
        location:
          type: string
          example: ''
        user_cookie:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    InstantMessageEvent:
      type: object
      properties:
        event_id:
          type: string
          example: ''
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        event_arrival_time:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        from_phone:
          type: string
          example: ''
        to_phone:
          type: string
          example: ''
        reason_code:
          type: string
          example: ''
        reason_type:
          type: string
          example: ''
        content:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    InstantMessageEventRequest:
      type: object
      properties:
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        from_phone:
          type: string
          example: ''
        to_phone:
          type: string
          example: ''
        reason_code:
          type: string
          example: ''
        reason_type:
          type: string
          example: ''
        content:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    SMSEvent:
      type: object
      properties:
        event_id:
          type: string
          example: ''
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        event_arrival_time:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        from_phone:
          type: string
          example: ''
        to_phone:
          type: string
          example: ''
        reason_code:
          type: string
          example: ''
        reason_type:
          type: string
          example: ''
        content:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    SMSEventRequest:
      type: object
      properties:
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        from_phone:
          type: string
          example: ''
        to_phone:
          type: string
          example: ''
        reason_code:
          type: string
          example: ''
        reason_type:
          type: string
          example: ''
        content:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    EmailEvent:
      type: object
      properties:
        event_id:
          type: string
          example: ''
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        event_arrival_time:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        from_email:
          type: string
          example: ''
        to_email:
          type: string
          example: ''
        reason_code:
          type: string
          example: ''
        reason_type:
          type: string
          example: ''
        forme_type:
          type: string
          example: ''
        content:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    EmailEventRequest:
      type: object
      properties:
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        from_email:
          type: string
          example: ''
        to_email:
          type: string
          example: ''
        reason_code:
          type: string
          example: ''
        reason_type:
          type: string
          example: ''
        forme_type:
          type: string
          example: ''
        content:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    CallEvent:
      type: object
      properties:
        event_id:
          type: string
          example: ''
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        event_arrival_time:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        from_phone:
          type: string
          example: ''
        to_phone:
          type: string
          example: ''
        reason_code:
          type: string
          example: ''
        reason_type:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    CallEventRequest:
      type: object
      properties:
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        from_phone:
          type: string
          example: ''
        to_phone:
          type: string
          example: ''
        reason_code:
          type: string
          example: ''
        reason_type:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    PaymentEvent:
      type: object
      properties:
        event_id:
          type: string
          example: ''
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        event_arrival_time:
          type: string
          example: ''
        item_id:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        payment_type:
          type: string
          example: ''
        monetary:
          type: string
          example: ''
        location:
          type: string
          example: ''
        user_cookie:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    PaymentEventRequest:
      type: object
      properties:
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        item_id:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        payment_type:
          type: string
          example: ''
        monetary:
          type: string
          example: ''
        location:
          type: string
          example: ''
        user_cookie:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    ActivationEvent:
      type: object
      properties:
        event_id:
          type: string
          example: ''
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        event_arrival_time:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        user_email_home:
          type: string
          example: ''
        user_email_business:
          type: string
          example: ''
        user_phone_home:
          type: string
          example: ''
        user_phone_business:
          type: string
          example: ''
        user_first_name:
          type: string
          example: ''
        user_last_name:
          type: string
          example: ''
        user_gender:
          type: string
          example: ''
        user_birthday:
          type: string
          example: ''
        user_address:
          type: string
          example: ''
        user_company:
          type: string
          example: ''
        location:
          type: string
          example: ''
        user_cookie:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    PurchaseEvent:
      type: object
      properties:
        event_id:
          type: string
          example: ''
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        event_arrival_time:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        user_cookie:
          type: string
          example: ''
        bucket:
          type: string
          example: change
        location:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    AddProductEvent:
      type: object
      properties:
        event_id:
          type: string
          example: ''
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        event_arrival_time:
          type: string
          example: ''
        item_id:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    IntentToBuyEvent:
      type: object
      properties:
        event_id:
          type: string
          example: ''
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        event_arrival_time:
          type: string
          example: ''
        item_id:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        user_cookie:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    AddToCartEvent:
      type: object
      properties:
        event_id:
          type: string
          example: ''
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        event_arrival_time:
          type: string
          example: ''
        item_id:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        frequency:
          type: string
          example: ''
        location:
          type: string
          example: ''
        user_cookie:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    RemoveFromCartEvent:
      type: object
      properties:
        event_id:
          type: string
          example: ''
        event_arrival_time:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        item_id:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        frequency:
          type: string
          example: ''
        location:
          type: string
          example: ''
        user_cookie:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    ActivationEventRequest:
      type: object
      properties:
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        user_email_home:
          type: string
          example: ''
        user_email_business:
          type: string
          example: ''
        user_phone_home:
          type: string
          example: ''
        user_phone_business:
          type: string
          example: ''
        user_first_name:
          type: string
          example: ''
        user_last_name:
          type: string
          example: ''
        user_gender:
          type: string
          example: ''
        user_birthday:
          type: string
          example: ''
        user_address:
          type: string
          example: ''
        user_company:
          type: string
          example: ''
        location:
          type: string
          example: ''
        user_cookie:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    PurchaseEventRequest:
      type: object
      properties:
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        user_cookie:
          type: string
          example: ''
        bucket:
          type: string
          example: change
        location:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    AddProductEventRequest:
      type: object
      properties:
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        item_id:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    IntentToBuyEventRequest:
      type: object
      properties:
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        item_id:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        user_cookie:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    AddToCartEventRequest:
      type: object
      properties:
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        item_id:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        frequency:
          type: string
          example: ''
        location:
          type: string
          example: ''
        user_cookie:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    RemoveFromCartEventRequest:
      type: object
      properties:
        from:
          type: string
          example: ''
        to:
          type: string
          example: ''
        event_type:
          type: string
          example: ''
        start_time:
          type: string
          example: ''
        end_time:
          type: string
          example: ''
        item_id:
          type: string
          example: ''
        user_id:
          type: string
          example: ''
        frequency:
          type: string
          example: ''
        location:
          type: string
          example: ''
        user_cookie:
          type: string
          example: ''
        device:
          type: string
          example: ''
        ip:
          type: string
          example: ''
    OrderItem:
      type: object
      properties:
        shipment_id:
          type: string
          optional: true
          example: "order-2021-11-03"
        sku:
          type: string
          example: sku-order-item-1
        EAN:
          type: string
          example: ean-example
        variation_value:
          type: string
          optional: true
          example: "color"
        variation_type:
          type: string
          optional: true
          example: "color"
        seller_id:
          type: string
          optional: true
          example: "seller-100"
        warehouse_id:
          type: string
          optional: true
          example: "seller-100"
        quantity:
          type: number
          format: float
          example: 10.40
        price:
          type: number
          format: float
          optional: true
          example: 100.40
        VAT:
          type: number
          format: float
          example: 100.40
        currency:
          type: string
          example: "EUR"
        business_model:
          type: string
          optional: true
          example: "dropshipping"
        expires_at:
          type: string
          format: datetime
          optional: true
          example: "2020-11-06T12:00:00"
        shipment_time:
          type: string
          format: datetime
          optional: true
          example: "2020-11-05T12:00:00"
        packaging_time:
          type: string
          format: datetime
          optional: true
          example: "2020-11-05T10:00:00"
        carrier_id:
          type: string
          format: datetime
          optional: true
          example: carrier-id-100
        cost:
          type: number
          format: float
          example: 250.40
        commission:
          type: number
          format: float
          example: 50.40
        payment_type:
          type: string
          example: debit card
    OrderStatusEventRequest:
      type: object
      properties:
        order_id:
          type: string
          example: sku-order-1
        user_id:
          type: string
          example: user-100 
        user_cookie: 
          type: string
          example: 41598c5e-b161-45d2-8a0d-8c386baa8349
        device:
          type: string
          example: iPhone 13 
        status:
          type: string
          example: OrderCreated
        action:
          type: string 
          optional: true
          example: pending
        ip:
          type: string
          example: 172.0.0.1
        order_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
    OrderStatus:
      type: object
      properties:
        event_id:
          type: string
          example: event-id-100
        event_arrival_time:
          type: string
          example: 2020-11-03T11:32:21
        order_id:
          type: string
          example: sku-order-1
        user_id:
          type: string
          example: user-100 
        user_cookie: 
          type: string
          example: 41598c5e-b161-45d2-8a0d-8c386baa8349
        device:
          type: string
          example: iPhone 13 
        status:
          type: string
          example: OrderCreated
        action:
          type: string 
          optional: false
          example: "pending"
        ip:
          type: string
          example: "172.0.0.1"
        order_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
    IamUser:
      type: object
      properties:
        email:
          type: string
          example: john.doe@example.com
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Doe
    IamUserDeletedSucessfully:
      type: object
      properties:
        detail:
          type: string
    IamUserDoesNotExist:
      type: object
      properties:
        message:
          type: string
          example: User with username john does not exist!
    IamUserAlreadyExists:
      type: object
      properties:
        detail:
          type: string
          example: User with username john already exists!
    IamUserCannotBeCreated:
      type: object
      properties:
        detail:
          type: string
          example: User with username john cannot be created!
    IamUserCannotBeFatched:
      type: object
      properties:
        detail:
          type: string
          example: User with username john cannot be fatched!
    IamUserCannotBeUpdated:
      type: object
      properties:
        detail:
          type: string
          example: User with username john cannot be updated!
    IamUserCannotBeDeleted:
      type: object
      properties:
        detail:
          type: string
          example: User with username john cannot be deleted!
    IamLdapConnectionDoesNotExist:
      type: object
      properties:
        detail:
          type: string
          example: LDAP connection with connection_id 94f09509-a5be-4b2b-a8d9-64fe682f2 does not exist
    IamLdapConnectionKeycloakError:
      type: object
      properties:
        detail:
          type: string
          example: There was an error when connecting to Keycloak
    IamLdapConnectionCreated:
      type: object
      properties:
        detail:
          type: string
          example: New LDAP provider added successfully
    IamLdapConnectionTestSuccessfull:
      type: object
      properties:
        detail:
          type: string
          example: Connection to LDAP server has been established successfully
    IamLdapConnectionSyncSuccessfull:
      type: object
      properties:
        ignored:
          type: boolean
        added:
          type: number
          example: 24
        updated:
          type: number
          example: 0
        removed:
          type: number
          example: 0
        failed:
          type: number
          example: 0
        status:
          type: string
          example: '0 imported users, 0 updated users, 0 users failed'
    IamLdapConnectionUnsuccessfull:
      type: object
      properties:
        detail:
          type: string
          example: 'You are not authorized to add LDAP connection, please check admin credentials'
    IamLdapConnectionProblem:
      type: object
      properties:
        detail:
          type: string
          example: LDAP connection unsuccessful
    IamLdapConnectionDeleted:
      type: object
      properties:
        detail:
          type: string
          example: Connection with connection_id 94f09509-a5be-4b2b-a8d9-64fe682f2 has successfully been deleted
    IamLdapConnectionTestParameters:
      type: object
      properties:
        connection_url:
          type: string
          example: 'ldap://ldap.test-ldap.com:389'
        bind_dn:
          type: string
          example: uid=integrationou=Userso=64fe682f25e0dcdc=jumpclouddc=com
        bind_credentials:
          type: string
          example: StrongPassword
    IamLdapConnectionParameters:
      type: object
      properties:
        name:
          type: string
          example: new_ldap
        connection_url:
          type: string
          example: 'ldap://ldap.test-ldap.com:389'
        bind_dn:
          type: string
          example: uid=integrationou=Userso=64fe682f25e0dcdc=jumpclouddc=com
        users_dn:
          type: string
          example: ou=Userso=64fe682f25e0dcdc=test_ldap=com
        bind_credentials:
          type: string
          example: StrongPassword
    IamLdapConnection:
      type: object
      properties:
        id:
          type: string
          example: 94f08909--4b2b-a8d9-a8d9-64fe682f25e0
        name:
          type: string
          example: new_ldap_connection
        providerId:
          type: string
          example: ldap
        providerType:
          type: string
          example: org.keycloak.storage.UserStorageProvider
        parentId:
          type: string
          example: example
        config:
          type: object
          properties:
            fullSyncPeriod:
              type: array
              items:
                type: string
                example: '-1'
            pagination:
              type: array
              items:
                type: string
                example: 'true'
            connectionPooling:
              type: array
              items:
                type: string
                example: 'true'
            usersDn:
              type: array
              items:
                type: string
                example: ou=Userso=64fe682f25e0dc=test_ldapdc=com
            cachePolicy:
              type: array
              items:
                type: string
                example: DEFAULT
            useKerberosForPasswordAuthentication:
              type: array
              items:
                type: string
                example: 'false'
            importEnabled:
              type: array
              items:
                type: string
                example: 'true'
            enabled:
              type: array
              items:
                type: string
                example: 'true'
            usernameLDAPAttribute:
              type: array
              items:
                type: string
                example: uid
            bindCredential:
              type: array
              items:
                type: string
                example: '**********'
            changedSyncPeriod:
              type: array
              items:
                type: string
                example: '-1'
            bindDn:
              type: array
              items:
                type: string
                example: uid=integrationou=Userso=64fe682f25e0dc=test_ldapdc=com
            vendor:
              type: array
              items:
                type: string
                example: other
            uuidLDAPAttribute:
              type: array
              items:
                type: string
                example: entryUUID
            connectionUrl:
              type: array
              items:
                type: string
                example: 'ldap://ldap.test-ldap.com:389'
            allowKerberosAuthentication:
              type: array
              items:
                type: string
                example: 'false'
            syncRegistrations:
              type: array
              items:
                type: string
                example: 'false'
            authType:
              type: array
              items:
                type: string
                example: simple
            debug:
              type: array
              items:
                type: string
                example: 'false'
            searchScope:
              type: array
              items:
                type: string
                example: '1'
            useTruststoreSpi:
              type: array
              items:
                type: string
                example: ldapsOnly
            priority:
              type: array
              items:
                type: string
                example: '0'
            trustEmail:
              type: array
              items:
                type: string
                example: 'false'
            userObjectClasses:
              type: array
              items:
                type: string
                example: inetOrgPerson organizationalPerson
            rdnLDAPAttribute:
              type: array
              items:
                type: string
                example: uid
            validatePasswordPolicy:
              type: array
              items:
                type: string
                example: 'false'
            batchSizeForSync:
              type: array
              items:
                type: string
                example: '1000'
    IamUserPasswordResetSent:
      type: object
      properties:
        detail:
          type: string
          example: Password reset email sent
    IAMGroup:
      type: object
      properties:
        id:
          type: string
          example: 135079a8-eeca-49d4-be5a-40bb6798294d
        name:
          type: string
          example: iam-name-example
        path:
          type: string
          example: /iam-name-example
        subgroups:
          type: array
          items:
              item:
                type: string
                example: subgroup
    IAMGroupList:
      type: array
      items:
        $ref: '#/components/schemas/IAMGroup'
    AuditTrail:
      type: object
      properties:
        kind:
          type: string
          example: amend-log-success
        detected:
          type: string
          example: '2020-08-24T12:05:29.061Z'
        data:
          type: object
        data_path:
          type: string
          example: string
        aggregate_id:
          type: string
          example: string
        app_name:
          type: string
          example: string
        app_version:
          type: string
          example: string
        service:
          type: string
          example: string
        client_ip:
          type: string
          example: string
        action:
          type: string
          example: access
        status:
          type: string
          example: cancel
        resource:
          type: string
          example: string
        details:
          type: string
          example: string
        username:
          type: string
          example: string
    AuditTrailCreated:
      type: object
      properties:
        message:
          type: string
          example: Log written successfully.
    Model:
      type: object
      properties:
        model_name:
          type: string
          example: MyNewModel
        description:
          type: string
          example: This is new model that predicts
        model_file:
          type: string
          example: 's3://path/to/ml/model.onnx'
        inputs:
          type: object
          properties:
            x1:
              type: object
              properties:
                description:
                  type: string
                  example: Input description
                data_type:
                  type: string
                  example: integer
                values:
                  type: array
                  items:
                    type: number
                    example: 321
        outputs:
          type: array
          items:
            type: object
            properties:
              predicted_label:
                type: string
                example: SomeClassName1
              predicted_score_value:
                type: number
                example: 0.6
              predicted_score_type:
                type: string
                example: probability
    ModelBulkRequest:
      type: object
      properties:
        id:
          type: string
          example: some_id
        file_path:
          type: string
          example: 's3://path/to/file.csv'
    ModelBulkResponse:
      type: object
      properties:
        id:
          type: string
          example: some_id
        output_file:
          type: string
          example: 's3://path/to/file.csv'
        result_link:
          type: string
          example: /models/model_id-recommender/predict/bulk/some_id/results
        status_link:
          type: string
          example: /models/model_id-recommender/predict/bulk/some_id/status
    ModelMetaResponse:
      type: object
      properties:
        model_name:
          type: string
          example: MyNewModel
        description:
          type: string
          example: This is new model that predicts
        inputs:
          type: object
          properties:
            x1:
              type: object
              properties:
                description:
                  type: string
                  example: Input description
                values:
                  type: array
                  items:
                    type: string
                    example: value_1
        outputs:
          type: array
          items:
            type: object
            properties:
              predicted_label:
                type: string
                example: SomeClassName1
              predicted_score_value:
                type: number
                example: 0.6
              predicted_score_type:
                type: string
                example: probability
    ModelRequest:
      type: object
      properties:
        id:
          type: string
          example: prediction_entity_id
        data:
          oneOf:
            - type: object
              properties:
                key:
                  type: number
            - type: array
              items:
                type: array
                items:
                  type: number
            - type: string
            - type: array
              items:
                type: number
    ModelResponse:
      type: object
      properties:
        details:
          oneOf:
            - type: object
              properties:
                model_type:
                  type: string
                number_of_classes:
                  type: number
            - type: object
              properties:
                model_type:
                  type: string
                number_of_segments:
                  type: number
            - type: object
              properties:
                model_type:
                  type: string
        prediction:
          oneOf:
            - type: object
              properties:
                id:
                  type: string
                predicted_label:
                  type: string
                predicted_score_value:
                  type: number
                predicted_score_type:
                  type: string
                prediction_evaluation:
                  type: array
                  items:
                    type: object
                    properties:
                      predicted_label:
                        type: string
                      predicted_score_value:
                        type: number
                      predicted_score_type:
                        type: string
                features:
                  type: object
                  properties:
                    importance:
                      type: object
            - type: object
              properties:
                id:
                  type: string
                predicted_label:
                  type: string
                prediction_evaluation:
                  type: array
                  items:
                    type: object
                    properties:
                      predicted_label:
                        type: string
                      predicted_distance:
                        type: number
                      predicted_distance_type:
                        type: string
            - type: object
              properties:
                id:
                  type: string
                predicted_value:
                  type: number
                predicted_value_type:
                  type: string
                prediction_evaluation:
                  type: array
                  items:
                    type: object
                    properties:
                      predicted_metric:
                        type: string
                      predicted_metric_value:
                        type: number
                features:
                  type: object
                  properties:
                    importance:
                      type: object
            - type: object
              properties:
                id:
                  type: string
                customer_id:
                  type: string
                recommender_type:
                  type: string
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      sku:
                        type: string
                      predicted_score_value:
                        type: number
                      predicted_score_type:
                        type: string
                      is_pruchased:
                        type: boolean
            - type: object
              properties:
                id:
                  type: string
                tbd:
                  type: string
    SmartLeafletProductList1:
      type: object
      properties:
        product_id:
          type: string
          example: bestproduct
        product_name:
          type: string 
          optional: true
          example: SKU-4252
        product_score:
          type: number
          format: int
          example: 94
    SmartLeafletProductList2:
      type: object
      properties:
        product_id:
          type: string
          example: secondbestproduct
        product_name:
          type: string 
          optional: true
          example: SKU-5820
        product_score:
          type: number
          format: integer
          example: 62
    SmartLeafletProductList3:
      type: object
      properties:
        product_id:
          type: string
          example: thirdproduct
        product_name:
          type: string 
          optional: true
          example: SKU-626
        product_score:
          type: number
          format: integer
          example: 35
    RequestLeaflet:
      type: object
      properties:
        product_list_name:
          type: string
          example: VerySmartLeaflet
        product_list_count:
          type: number
          example: 43
        product_list:
          type: array
          description: Details of product list
          items:
            allOf:
                - $ref: '#/components/schemas/SmartLeafletProductList1'
                - $ref: '#/components/schemas/SmartLeafletProductList2'
        date_created:
          type: string
          format: datetime
          optional: False
          example: "2021-12-12T13:00:00"
    ReadLeaflets:
      type: object
      properties:
        product_list_id:
          type: string 
          example: LF-1315
        product_list_name:
          type: string
          example: VerySmartLeaflet
        product_lists:
          type: array
          description: Details for one or multiple groups
          items:
            anyOf:
                - $ref: '#/components/schemas/SmartLeafletProductList1'
                - $ref: '#/components/schemas/SmartLeafletProductList2'
        date_created:
          type: string
          format: datetime
          example: "2022-02-12T13:00:00"
        date_scored:
          type: string
          format: datetime
          optional: true
          example: "2022-02-14T13:00:00"
    LeafletsResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 2
        product_lists:
          type: array
          items:
            $ref: '#/components/schemas/LeafletGetAll'
    Leaflets:
      type: array
      items:
        - $ref: '#/components/schemas/Leaflet'
    Leaflet:
      type: object
      properties:
        product_list_id:
          type: string 
          example: LF-1315
        product_list_name:
          type: string
          example: VerySmartLeaflet
        products_lists:
          type: array
          description: Details for one or multiple groups
          items:
            anyOf:
                - $ref: '#/components/schemas/SmartLeafletProductList1'
                - $ref: '#/components/schemas/SmartLeafletProductList2'
                - $ref: '#/components/schemas/SmartLeafletProductList3'
        date_created:
          type: string
          format: datetime
          example: "2021-12-12T13:00:00"
        date_scored:
          type: string
          format: datetime
          optional: true
          example: "2021-12-14T13:00:00"
    LeafletGetAll:
      type: object
      properties:
        product_list_id:
          type: string 
          example: LF-5252
        product_list_name:
          type: string
          example: TestLeaflet
        products_count:
          type: number
          format: integer
          description: Number of products in leaflet
          example: 24
        date_created:
          type: string
          format: datetime
          example: "2022-02-12T13:00:00"
        date_scored:
          type: string
          format: datetime
          optional: true
          example: "2022-02-13T13:00:00"
    ModelDeletedSucessfully:
      type: object
      properties:
        message:
          type: string
          example: Model is deleted sucessfully
    ModelCreatedSucessfully:
      type: object
      properties:
        message:
          type: string
          example: Model is created sucessfully
    ModelUpdatedSucessfully:
      type: object
      properties:
        message:
          type: string
          example: Model is updated sucessfully
    ModelVersions:
      type: array
      items:
        type: object
        properties:
          model_id:
            type: string
            example: regression
          version:
            type: string
            example: v2
    ModelError:
      type: object
      properties:
        message:
          type: string
          example: There was a problem with ml model
    EvaluateModelRequest:
      type: object
      properties:
        evaluation_set:
          type: string
          example: 's3://path/to/evluation/set'
        evlauation_metrics:
          type: array
          items:
            type: string
            example: metric_1
    EvaluateModel:
      type: object
      properties:
        model_id:
          type: string
          example: rfmt
        evaluation_id:
          type: string
          example: ev-1312
        message:
          type: string
          example: Model evaluation has started
    EvaluateModelStatus:
      type: object
      properties:
        model_id:
          type: string
          example: rfmt
        evaluation_id:
          type: string
          example: ev-1312
        status:
          type: string
          example: In progress
    EvaluationResults:
      type: object
      properties:
        model_id:
          type: string
          example: rfmt
        evaluation_id:
          type: string
          example: ev-1312
        evaluation_set:
          type: string
          example: 's3://path/to/evluation/set'
        evlauation_metrics:
          type: array
          items:
            type: string
            example: metric_1
        results:
          type: object
          properties:
            metric_1:
              type: number
              example: 12.34
            metric_2:
              type: number
              example: 2.34
    TrainModelRequest:
      type: object
      properties:
        params:
          type: object
          properties:
            parameter_name:
              type: string
              example: parameter_value
        data:
          type: string
          example: 's3://path/to/data'
        target:
          type: string
          example: str
        features:
          type: array
          items:
            type: string
            example: feature_1
        alg:
          type: string
          example: some_alg
    TrainModel:
      type: object
      properties:
        model_id:
          type: string
          example: rfmt
        training_id:
          type: string
          example: tr-1245
        message:
          type: string
          example: Model training has started
    TrainModelStatus:
      type: object
      properties:
        model_id:
          type: string
          example: rfmt
        training_id:
          type: string
          example: tr-1245
        status:
          type: string
          example: In progress
    ModelTrainingResults:
      type: object
      properties:
        model_id:
          type: string
          example: rfmt
        training_id:
          type: string
          example: tr-1245
        model_name:
          type: string
          example: MyNewModel
        description:
          type: string
          example: This is new model that predicts
        model_file:
          type: string
          example: 's3://path/to/ml/model.onnx'
    PredictModelMeta:
      type: object
      properties:
        model_id:
          type: string
          example: model-id-test
        version:
          type: string
          example: v2
        cloud_storage:
          type: string
          example: AWS s3 
        type:
          type: string
          example: regression
    PredictModel:
      type: object
      properties:
        model_meta:
          type: array
          items:
            $ref: '#/components/schemas/PredictModelMeta'
    PredictModelList:
      type: array
      items:
        $ref: '#/components/schemas/PredictModel'
    PredictModelMetaList:
      type: array
      items:
        $ref: '#/components/schemas/PredictModelMeta'
    PredictModelCreatedResponse:
      type: object
      properties:
        message:
          type: string
          example: Model created.
    PredictModelMetaUpdateRequest:
      type: object
      properties:
        model_name:
          type: string
          example: model-name-example
        model_type:
          type: string
          example: regression 
        model_format:
          type: string
          example: pickle
    PredictModelDeleted:
      type: object
      properties:
        message:
          type: string
          example: Model model-id-example deleted successfully.
  responses:
    PredictModelDeletedResponse:
      description: Delete model meta
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PredictModelDeleted'
    Touchpoint:
      description: Get a Touchpoint
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TouchpointResponse'
    TouchpointNotFound:
      type: object
      properties:
        detail:
          type: string
          example: Not found
    PredictModelMetaCreatedResponse:
      description: Predict model created successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PredictModelCreatedResponse'
    PredictModelMeta:
      description: Get predict model meta
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PredictModelMeta'
    PredictModelMetaList:
      description: Get predict model meta
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PredictModelMetaList'
    PredictModel:
      description: list of available prediction models
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PredictModel'
    PredictModelList:
      description: list of available prediction models
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PredictModelList'
    TrainModel:
      description: Train model reponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrainModel'
    TrainModelStatus:
      description: Train model status reponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrainModelStatus'
    ModelTrainingResults:
      description: Meta response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ModelTrainingResults'
    EvaluateModel:
      description: Evaluate model reponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateModel'
    EvaluateModelStatus:
      description: Train model status reponse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluateModelStatus'
    EvaluationResults:
      description: Evaluate model results
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EvaluationResults'
    ModelDeletedResponse:
      description: Model predict response
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Model model-id-test deleted successfully.
    ModelPredictResponse:
      description: Model predict response
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ModelResponse'
          examples:
            binary-classification-model:
              $ref: '#/components/examples/BinaryClassificationModelPredictResponse'
            multiclass-clasification-model:
              $ref: '#/components/examples/MulticlassClassificationModelPredictResponse'
            segmentation-model:
              $ref: '#/components/examples/SegmentationModelPredictResponse'
            reggresion-model:
              $ref: '#/components/examples/ReggresionModelPredictResponse'
            recommender-model:
              $ref: '#/components/examples/ReccomendationModelPredictResponse'
            expert-model:
              $ref: '#/components/examples/ExpertModelPredictResponse'
    ModelWithModelIdDoesNotExist:
      description: Model does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotExist'
    ModelError:
      description: Model error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ModelError'
    ModelDeleted:
      description: Model deleted sucessfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ModelDeletedSucessfully'
    ModelCreated:
      description: Model created sucessfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ModelCreatedSucessfully'
    ModelUpdated:
      description: Model updated sucessfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ModelUpdatedSucessfully'
    Models:
      description: List of all avaliable Ml models
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Model'
    ModelVersions:
      description: List of all avaliable Ml model versions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ModelVersions'
    ModelBulkResponse:
      description: Bulk request output
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ModelBulkResponse'
    ModelMetaResponse:
      description: Meta response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ModelMetaResponse'
    AuditTrailCreated:
      description: Audit trail created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuditTrailCreated'
    AuditTrails:
      description: Audit trail list
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuditTrail'
    IamGroupDoesNotExist:
      description: IAM Group does not exist
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                example: 'Group group-test does not exist'
    IamUserRemovedFromGroupResponse:
      description: IAM User removed from provided group
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                example: "User removed from group group-test"
    IamGroupUserAddedResponse:
      description: IAM User added to provided list of groups
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                example: User successfully added to groups 
    IamGroupUserUpdatedResponse:
      description: Update user groups
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                example: User groups updated
    IamGroupList:
      description: Get available IAM groups
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IAMGroupList'
    DatabaseConnectionError:
      type: object
      properties:
        message:
          type: string
          example: There was a problem connecting to database
    IamUser:
      description: Get iam user
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IamUser'
    IamUserDeleted:
      description: Iam user deleted sucessfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IamUserDeletedSucessfully'
    IamUserList:
      description: Iam user list
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/IamUserResponse'
    IamUserCreated:
      description: Iam user created sucessfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IamUserResponse'
    IamUserUpdated:
      description: Iam user updated sucessfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IamUserResponse'
    IamUserDoesNotExist:
      description: Iam user does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IamUserDoesNotExist'
    IamUserAlreadyExists:
      description: Iam user already exists
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IamUserAlreadyExists'
    IamUserCannotBeCreated:
      description: Iam user cannot be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IamUserCannotBeCreated'
    IamUserCannotBeFatched:
      description: Iam user cannot be fatched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IamUserCannotBeFatched'
    IamUserCannotBeUpdated:
      description: Iam user cannot be updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IamUserCannotBeUpdated'
    IamUserCannotBeDeleted:
      description: Iam user cannot be deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IamUserCannotBeDeleted'
    IamUserPasswordResetSent:
      description: Password reset email sent
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IamUserPasswordResetSent'
    IamLdapConnections:
      description: Get list of LDAP connections
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/IamLdapConnection'
    IamLdapConnectionCreated:
      description: LDAP connection created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IamLdapConnectionCreated'
    IamLdapConnectionTestSuccessfull:
      description: LDAP connection can be created test reposnse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IamLdapConnectionTestSuccessfull'
    IamLdapConnectionSyncSuccessfull:
      description: LDAP connection synced all users
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IamLdapConnectionSyncSuccessfull'
    IamLdapConnectionUnsuccessfull:
      description: LDAP connection can not be created test reposnse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IamLdapConnectionUnsuccessfull'
    IamLdapConnectionProblem:
      description: LDAP connection cannot be established
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IamLdapConnectionProblem'
    IamLdapConnectionDeleted:
      description: LDAP connection deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IamLdapConnectionDeleted'
    IamLdapConnection:
      description: Get LDAP connection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IamLdapConnection'
    IamLdapConnectionDoesNotExist:
      description: LDAP connection does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IamLdapConnectionDoesNotExist'
    IamLdapConnectionKeycloakError:
      description: Keycloak connection error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IamLdapConnectionKeycloakError'
    OrderStatusResponse:
      ActivationEventResponse:
      description: Response od orders
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrderStatus'
    ActivationEventResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActivationEvent'
    PurchaseEventResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PurchaseEvent'
    AddProductEventResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddProductEvent'
    IntentToBuyEventResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IntentToBuyEvent'
    AddToCartEventResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddToCartEvent'
    RemoveFromCartEventResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RemoveFromCartEvent'
    PaymentEventResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentEvent'
    CallEventResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CallEvent'
    EmailEventResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmailEvent'
    SMSEventResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SMSEvent'
    InstantMessageEventResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InstantMessageEvent'
    LoginEventResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginEvent'
    LogoutEventResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LogoutEvent'
    WishlistEventResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WishlistEvent'
    VisitEventResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VisitEvent'
    SubscriptionEventResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubscriptionEvent'
    WarehouseEventResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WarehouseEvent'
    EventError:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EventError'
    StorageFileDownloadRequest:
      description: Storage File download request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StorageFileDownloadRequest'
    StorageListAllFilesInBucketResponse:
      description: List all files in response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StorageListAllFilesInBucketResponse'
    StorageBucketNameNotValid:
      description: Name of the bucket is not valid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StorageBucketNameNotValid'
    StorageBucketNotFound:
      description: Bucket doesn't exist in object storage
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StorageBucketNotFound'
    StorageFileUploadResponse:
      description: Upload file to storage response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StorageFileUploadResponse'
    StorageFileExists:
      description: Upload existing file to storage
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StorageFileExists'
    StorageFileNameNotValid:
      description: Upload/download file with special characters to storage
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StorageFileNameNotValid'
    StorageFileDownloadResponse:
      description: Download file from storage response
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/StorageFileDownloadResponse'
    StorageFileDoesntExist:
      description: Download file that doesn't exist from storage
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StorageFileDoesntExist'
    TokenIsInvalid:
      description: Token is invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotAuthorized'
    Error:
      description: Database connection error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Demographics:
      description: Customer demographics info
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Demographics'
    PurchasedItems:
      description: Purchased items list
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PurchasedItems'
    CustomerActivation:
      description: Datetimes of customer activations
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerActivation'
    BestBusket:
      description: Customers best busket
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BestBusket'
    Recommendations:
      description: Recommended items
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Recommendations'
    CampaignMetaForUser:
      description: Campaign meta for user
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CampaignMetaForUser'
    CustomerCampaigns:
      description: Customer Campaigns
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200'
    CustomerCampaign:
      description: Customer Campaigns
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerCampaigns'
    CustomerAudiences:
      description: Customer Audiences
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200_1'
    CustomerAudience:
      description: Customer Audience Meta
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Audience'
    Segmentation:
      description: Segmentation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Segmentation'
          examples:
            rfmt:
              $ref: '#/components/examples/RFMT'
            rfmt-plus:
              $ref: '#/components/examples/RFMTPlus'
            rfmtcc:
              $ref: '#/components/examples/RFMTCC'
            rfmtlv:
              $ref: '#/components/examples/RFMTLV'
    ChurnScore:
      description: Churn score
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChurnScore'
    FraudScore:
      description: Fraud score
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FraudScore'
    CLV:
      description: Customer lifetime value
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CLV'
    CustomNumberInfo:
      description: Customer custom number info
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomNumberInfo'
    CustomDescriptionInfo:
      description: Customer custom ddescription info
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomDescriptionInfo'
    PropensityToBuy:
      description: Propensity to buy
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropensityToBuy'
    PropensityToBuyForCampaign:
      description: Propensity to buy for campaign
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PropensityToBuyForCampaign'
    CustomerPurchases:
      description: Customer purchases response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerPurchases'
    CustomerEvents:
      description: Customer event response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerEvents'
    Placeholder:
      description: Placeholder response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Placeholder'
    CustomerTbd:
      description: Customer all info
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerTbd'
    FileUploadResponse:
      description: File upload response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FileUploadResponse'
    FileIsInvalid:
      description: File is invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FileIsInvalid'
    ObjectStorageError:
      description: Object storage error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ObjectStorageError'
    FileLibraryResponse:
      description: File library response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FileLibraryResponse'
    FileLibraryError:
      description: File library error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FileLibraryError'
    FilePreviewResponse:
      description: File preview response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FilePreviewResponse'
    FilePreviewError:
      description: File preview error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FilePreviewError'
    ForecastPreviewResponse:
      description: Forecast preview response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForecastPreviewResponse'
    FileNotFound:
      description: File not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FileNotFound'
    RequstedRangeNotSatisfiable:
      description: Requested range not satisfiable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequstedRangeNotSatisfiable'
    UnprocessableEntity:
      description: Unprocessable entity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnprocessableEntity'
    InvalidFileName:
      description: Invalid file name
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidFileName'
    ForecastPreviewError:
      description: Forecast preview error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForecastPreviewError'
    ForecastStatus:
      description: Forecast status
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForecastStatus'
          examples:
            success:
              value:
                status: SUCCESS
            started:
              value:
                status: STARTED
    ForecastStatusPending:
      description: Forecast status pending
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForecastStatusPending'
    ForecastStatusFailure:
      description: Forecast status failure
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForecastStatusFailure'
    ForecastStatusError:
      description: Forecast status error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForecastStatusError'
    ForecastPreviewResults:
      description: Forecast preview results
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForecastPreviewResults'
    ForecastPreviewResultsError:
      description: Forecast preview results error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForecastPreviewResultsError'
    ForecastSchedulePreview:
      description: Forecast schedule preview results
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForecastSchedulePreview'
    ForecastSchedulePreviewError:
      description: Forecast schedule preview error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForecastSchedulePreviewError'
    ForecastScheduleResponse:
      description: Forecast schedule response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForecastScheduleResponse'
    ForecastScheduleError:
      description: Forecast schedule error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForecastScheduleError'
    ForecastAlreadyScheduled:
      description: Forecast already exists
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForecastAlreadyScheduled'
    DeleteForecastSchedule:
      description: Delete scheduled forecast
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteForecastSchedule'
    DeleteForecastScheduleError:
      description: Delete scheduled forecast error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteForecastScheduleError'
    ScheduledForecastNotFound:
      description: Scheduled forecast not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScheduledForecastNotFound'
    ForecastRunResponse:
      description: Forecast run response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForecastRunResponse'
    ForecastRunError:
      description: Forecast run error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForecastRunError'
    ForecastRunResults:
      description: Forecast run results
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForecastRunResults'
    ForecastRunResultsError:
      description: Forecast run results error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForecastRunResultsError'
    SegmentsResponse:
      description: Segments response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Segments'
    SegmentsShareResponse:
      description: Segments share response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SegmentsShare'
    SegmentsStoreShareResponse:
      description: Segments share by store response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SegmentsStoreShare'
    SegmentDataResponse:
      description: Segment data for specific segment id
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SegmentData'
    PredictResponse:
      description: Predicted items for a given busket
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Predict'
    TrendResponse:
      description: Category and item trend response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Trend'
          examples:
            best-selling-item:
              $ref: '#/components/examples/BestSellingItem'
            least-selling-item:
              $ref: '#/components/examples/LeastSellingItem'
            best-selling-category:
              $ref: '#/components/examples/BestSellingCategory'
            least-selling-category:
              $ref: '#/components/examples/LeastSellingCategory'
    ItemsToAverageResponse:
      description: Items spending comapred to average
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ItemsToAverage'
    SegmentationCentroids:
      description: Segmentation centroids response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SegmentationCentroids'
    SegmentationShares:
      description: Segmentation share response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SegmentationShares'
    SegmentationTransitions:
      description: Segmentation transitions response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SegmentationTransitions'
    SegmentationStoreTransitions:
      description: Segmentation store transitions response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SegmentationStoreTransitions'
    SegmentationCustomerTransitions:
      description: Segmentation customer transitions response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SegmentationCustomerTransitions'
    SearchCustomers:
      description: Search customers response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchCustomers'
    SearchItems:
      description: Search items response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchItems'
    SearchCampaigns:
      description: Search campaigns response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchCampaigns'
    Items:
      description: List of items response
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Item'
    Item:
      description: Item response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Item'
    Leaflets:
      description: List of leaflets response
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Leaflet'
    Leaflet:
      description: Leaflet response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Leaflet'
    ItemDeleted:
      description: Item deleted response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ItemDeleted'
    LeafletDeleted:
      description: Leaflet deleted response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LeafletDeleted'
    ItemToItem:
      description: Complementary items
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ItemToItem'
    CustomersToItem:
      description: Customers to item
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomersToItem'
    Customers:
      description: List of items response
      content:
        application/json:
          schema:
            type: array
            example:
            - uid: "55463"
              external_uid: "44324"
              firstName: John
              lastName: Doe
              gender: male
              race: caucasian
              address: Example Street 20
              birth_date: 1992-02-08
              phone_mobile: "009844532"
              phone_home: "7456420"
              phone_business: "007865543"
              device_token: bk3RNwTe3H0:CI2k_HHwgIpoDKCIZvvDMExUdFQ3P1...
              email_home: john.doe@example.com
              email_business: john@company.com
              income: 3572.34
              education: PhD
              employement: self-employed
              company: Example Company Limited
              consents:
              - consent_name: viber
                consent_description: Wants to recieve Viber promotions
                consent_acceptance: true
            - uid: "443521"
              external_uid: "33424"
              firstName: Jane
              lastName: Doe
              gender: female
              race: caucasian
              address: Example Street 33
              birth_date: 1979-02-04
              phone_mobile: "007382532"
              phone_home: "8734420"
              phone_business: "0002334543"
              device_token: NidweTe3H0:CI2k_JHdihiawedZvvDMExUdFQ3P1...
              email_home: jane.doe@example.com
              email_business: jane@company.com
              income: 4002.34
              education: PhD
              employement: employe
              company: New Company Limited
              consents:
              - consent_name: sms
                consent_description: Wants to recieve sms promotions
                consent_acceptance: true
            items:
              $ref: '#/components/schemas/Customer'
    Customer:
      description: Item response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'
    CustomerDeleted:
      description: Item deleted response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerDeleted'
    CampaignDeleted:
      description: Item deleted response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CampaignDeleted'
  
